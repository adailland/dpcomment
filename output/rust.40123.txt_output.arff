% Generated by Discussion model rust.40123.txt
% File generated on 2017/08/02 15:59:34

@relation pr1501703974736

@attribute author String
@attribute textual String
@attribute isProjectMember {TRUE, FALSE}
@attribute isInvited {TRUE, FALSE}
@attribute numberOfWords numeric
@attribute commentsSoFar numeric
@attribute allUtterancesSoFar numeric
@attribute utterancesInCommentSoFar numeric
@attribute utteredByOriginalPoster {TRUE, FALSE}
@attribute hasCapitalizedWord {TRUE, FALSE}
@attribute containsShould {TRUE, FALSE}
@attribute hasDecisions {TRUE, FALSE}
@attribute howManyDecisions numeric
@attribute idComment numeric

@data
TimNN,"Since nobody has done this yet, I decided to get things started:",FALSE,FALSE,12,0,0,0,TRUE,TRUE,FALSE,TRUE,0,1
TimNN,"push the relevant commits to rust-lang/llvm and rust-lang/compiler-rt",FALSE,FALSE,8,0,2,2,TRUE,FALSE,FALSE,TRUE,0,1
TimNN,"cleanup .gitmodules",FALSE,FALSE,2,0,3,3,TRUE,FALSE,FALSE,TRUE,0,1
TimNN,"Verify if there are any other commits from rust-lang/llvm which need backporting",FALSE,FALSE,12,0,4,4,TRUE,TRUE,FALSE,TRUE,0,1
TimNN,"Investigate / fix debuginfo ( <optimized out> ) failures",FALSE,FALSE,7,0,5,5,TRUE,TRUE,FALSE,TRUE,0,1
TimNN,"Use correct emscripten version in docker image",FALSE,FALSE,7,0,6,6,TRUE,TRUE,FALSE,TRUE,0,1
TimNN,"Closes #37609.",FALSE,FALSE,2,0,7,7,TRUE,TRUE,FALSE,TRUE,0,1
TimNN,"Test results:",FALSE,FALSE,2,0,8,8,TRUE,TRUE,FALSE,TRUE,0,1
TimNN,"Everything is green ðŸŽ‰",FALSE,FALSE,4,0,9,9,TRUE,TRUE,FALSE,TRUE,0,1
rust-highfive,"r? @brson",FALSE,FALSE,2,1,10,0,FALSE,FALSE,FALSE,TRUE,0,2
rust-highfive,"(rust_highfive has picked a reviewer for you, use r? to override)",FALSE,FALSE,11,1,11,1,FALSE,FALSE,FALSE,TRUE,0,2
alexcrichton,"@TimNN you can probably work faster than going through @bors by selectively adding ALLOW_PR=1 to various entries in .travis.yml, that'll run the tests on the PR itself before we hit @bors.",FALSE,FALSE,31,2,12,0,FALSE,TRUE,FALSE,TRUE,0,3
alexcrichton,"I'd recommend doing that for a couple of the cross targets at least and then probably some of the other builders as well (such as emscripten)",FALSE,FALSE,26,2,13,1,FALSE,TRUE,FALSE,TRUE,0,3
alexcrichton,"My guess is that AppVeyor will be one of the most difficult pieces to update as part of this upgrade. Unfortunately we don't have any extra capacity there for running tests so it may be difficult to do so on the PR before bors :(",FALSE,FALSE,45,2,14,2,FALSE,TRUE,FALSE,TRUE,0,3
TimNN,"The debuginfo failures all occur because static muts are optimized out. (I verified that no optimisation flags were passed to rustc).",FALSE,TRUE,21,3,15,0,TRUE,FALSE,FALSE,TRUE,0,4
TimNN,"I'm unsure what the best fix would be here (something like the #[used] attribute from #39987 would probably work).",FALSE,TRUE,19,3,16,1,TRUE,TRUE,FALSE,TRUE,0,4
rkruppe,"static muts getting optimized out sounds like an issue with the IR/debug info we generate. Perhaps one of the debug info-related changes was incomplete and we don't emit everything we need to emit for globals? (#39528 looks very related.) To clarify, does this:",FALSE,FALSE,43,4,17,0,FALSE,TRUE,FALSE,TRUE,0,5
rkruppe,"static muts are optimized out",FALSE,FALSE,5,4,18,1,FALSE,FALSE,FALSE,TRUE,0,5
rkruppe,"mean that gdb outputs <optimized out>, or did you check the object files and the symbols for the globals were missing?",FALSE,FALSE,21,4,20,3,FALSE,FALSE,FALSE,TRUE,0,5
rkruppe,"In any case, requiring #[used] on static muts to enable debugging would be a serious regression, not to mention that #[used] doesn't exist yet and I'm not even sure it would fix this (see above).",FALSE,FALSE,35,4,22,5,FALSE,TRUE,FALSE,TRUE,0,5
petrochenkov,"I vaguely remember about statics being optimized away the last summer already, when I wrote debuginfo tests for unions (one of the failing tests in this PR).So I had to add at least an assignment for the static to be kept.Maybe the LLVM optimizer become better and now sees that the optimization is still possible?",FALSE,FALSE,55,5,24,1,FALSE,TRUE,FALSE,TRUE,0,6
TimNN,"To clarify, does this:",FALSE,TRUE,4,6,25,0,TRUE,FALSE,FALSE,TRUE,0,7
TimNN,"static muts are optimized out",FALSE,TRUE,5,6,26,1,TRUE,FALSE,FALSE,TRUE,0,7
TimNN,"mean that gdb outputs <optimized out>, or did you check the object files and the symbols for the globals were missing?",FALSE,TRUE,21,6,28,3,TRUE,FALSE,FALSE,TRUE,0,7
TimNN,"It means that gdb prints <optimized out>",FALSE,TRUE,7,6,29,4,TRUE,TRUE,FALSE,TRUE,0,7
TimNN,"Apparently I made some assumptions that weren't quite correct.",FALSE,TRUE,9,6,30,5,TRUE,TRUE,FALSE,TRUE,0,7
TimNN,"The symbols exist (output of nm from the simple-struct test:",FALSE,TRUE,10,6,31,6,TRUE,TRUE,FALSE,TRUE,0,7
TimNN,"Since this is apparently indeed debuginfo related I guess cc @michaelwoerister, @dylanmckay",FALSE,TRUE,12,6,32,7,TRUE,TRUE,FALSE,TRUE,0,7
TimNN,"The generated IR, in case that helps anyone: https://gist.github.com/TimNN/92152a2f8062909805657d1bb4131998",FALSE,TRUE,9,7,33,0,TRUE,TRUE,FALSE,TRUE,0,8
TimNN,"The failed build of the IMAGE=cross seems to be qemu related, one of the failed tests:",FALSE,TRUE,16,8,34,0,TRUE,TRUE,FALSE,TRUE,0,9
TimNN,"I saw the following panics:",FALSE,TRUE,5,8,35,1,TRUE,TRUE,FALSE,TRUE,0,9
TimNN,"Do they ring a bell for anyone?",FALSE,TRUE,7,8,36,2,TRUE,TRUE,FALSE,TRUE,0,9
TimNN,"The emscripten failure are mainly of the kind Invalid record (Producer: 'LLVM4.0.0' Reader: 'LLVM 3.9.0'), although there are some assertion failures as well. (I would fix the llvm version mismatch first, maybe that fixes the assertion failures as well).",FALSE,TRUE,39,9,37,0,TRUE,TRUE,FALSE,TRUE,0,10
TimNN,"The android image fails with an LLVM assertion:",FALSE,TRUE,8,10,38,0,TRUE,TRUE,FALSE,TRUE,0,11
TimNN,"There are also some warnings (see below for an example), of which I am unsure how relevant / important they are.",FALSE,TRUE,21,10,39,1,TRUE,TRUE,FALSE,TRUE,0,11
alexcrichton,"@TimNN the former may be a bug in LLVM? (or just something we've never exposed ourselves before). The latter is normal, I believe it's happening on builds today.",FALSE,FALSE,28,11,40,0,FALSE,TRUE,FALSE,TRUE,0,12
alexcrichton,"Oh we've also got ~10 extra capacity on Travis so feel free to test more than one row at a time if you'd like :)",FALSE,FALSE,25,12,41,0,FALSE,TRUE,FALSE,TRUE,0,13
TimNN,"@alexcrichton: Have you ever seen something like the qemu failures in #40123 (comment) before?",FALSE,TRUE,14,13,42,0,TRUE,TRUE,FALSE,TRUE,0,14
TimNN,"Oh we've also got ~10 extra capacity on Travis so feel free to test more than one row at a time if you'd like :)",FALSE,TRUE,25,13,43,1,TRUE,TRUE,FALSE,TRUE,0,14
TimNN,"Ah, ok. I've been doing 3 at a time (when not debugging emscripten), but I guess I can run a few more :)",FALSE,TRUE,23,13,44,2,TRUE,TRUE,FALSE,TRUE,0,14
TimNN,"The dist-s390x-linux-netbsd build fails while cross compiling llvm due to missing std::thread support:",FALSE,TRUE,13,14,45,0,TRUE,FALSE,FALSE,TRUE,0,15
TimNN,"I guess the fix here is to backport (part of?) rust-lang/llvm@58731be as well.",FALSE,TRUE,13,14,47,2,TRUE,TRUE,FALSE,TRUE,0,15
TimNN,"I've been investigating the emscripten failures, see below for the findings. The one thing that both test have in common is that they use fixed sized arrays ([constexpr; len]) although if that is related / the problem, I don't know.",FALSE,TRUE,40,15,48,0,TRUE,TRUE,FALSE,TRUE,0,16
TimNN,"run-pass/packed-struct-vec.rs IR:",FALSE,TRUE,2,15,49,1,TRUE,TRUE,FALSE,TRUE,0,16
TimNN,"The #[repr(packed)] seems to be just broken, printing instead of asserting for equality gives the following results:",FALSE,TRUE,17,15,50,2,TRUE,TRUE,FALSE,TRUE,0,16
TimNN,"(with this code:)",FALSE,TRUE,3,15,51,3,TRUE,FALSE,FALSE,TRUE,0,16
TimNN,"run-pass/issue-29663.rs IR:",FALSE,TRUE,2,15,52,4,TRUE,TRUE,FALSE,TRUE,0,16
TimNN,"The write_volatile in the following snippet is apparently not executed correctly:",FALSE,TRUE,11,15,53,5,TRUE,TRUE,FALSE,TRUE,0,16
TimNN,"The output:",FALSE,TRUE,2,15,54,6,TRUE,TRUE,FALSE,TRUE,0,16
TimNN,"If line 61 is commented:",FALSE,TRUE,5,15,55,7,TRUE,TRUE,FALSE,TRUE,0,16
TimNN,"Note that other write_volatile / read_volatile pairs work correctly.",FALSE,TRUE,9,15,56,8,TRUE,TRUE,FALSE,TRUE,0,16
alexcrichton,"The QEMU failures don't look familiar but are perhaps indicative of the program segfaulting or otherwise exiting un-cleanly. Do you have the full logs I could help take a look at?",FALSE,TRUE,31,16,58,1,FALSE,TRUE,FALSE,TRUE,0,17
alexcrichton,"The missing std::thread business may be related to how we compile compilers. It may be that one of our compilers is too old or something like that. I know that MinGW C++ compilers, at least, do not have std::thread (at least if I'm remembering correctly). Historically we've  dealt  with this by just deleting code that uses std::thread, but it's clearly getting harder over time! This also isn't scalable into the future really. Unfortunately I don't know of a great solution here.",FALSE,TRUE,81,16,60,3,FALSE,TRUE,FALSE,TRUE,0,17
TimNN,"The QEMU failures don't look familiar but are perhaps indicative of the program segfaulting or otherwise exiting un-cleanly. Do you have the full logs I could help take a look at?",FALSE,TRUE,31,17,61,0,TRUE,TRUE,FALSE,TRUE,0,18
TimNN,"Ah, sorry, I linked the logs only from the original post, here they are: https://travis-ci.org/rust-lang/rust/jobs/205860539",FALSE,TRUE,15,17,62,1,TRUE,TRUE,FALSE,TRUE,0,18
alexcrichton,"Fascinating! Unfortunately I may not be of much help. Also thanks for the links, I should have looked around for them! Of the failures so far:",FALSE,TRUE,26,18,63,0,FALSE,TRUE,TRUE,TRUE,0,19
alexcrichton,"armhf - this is really suspicious. In theory if qemu-test-server panics in any way we'd see it in the logs (as it doesn't daemonize that much or anything), but I'm not seeing anything. The errors mean that the server is prematurely closing the connection, but I'm not sure how that's possible without otherwise printing error information! It may be a bug in LLVM or related to the assertion failures, but it may also require more debugging the qemu instance itself :(",FALSE,TRUE,81,18,64,1,FALSE,TRUE,FALSE,TRUE,0,19
alexcrichton,"emscripten - looks like you're on top of these (maybe fastcomp regressions? maybe llvm regression? unsure myself...)",FALSE,TRUE,17,18,65,2,FALSE,FALSE,FALSE,TRUE,0,19
alexcrichton,"android - yeah looks like an LLVM bug? Although I wouldn't rule out invalid codegen on our side just yet.",FALSE,TRUE,20,18,66,3,FALSE,TRUE,FALSE,TRUE,0,19
alexcrichton,"s390x-netbsd - Ok so this specifically failed to compiled LLVM for NetBSD. This is our script to compile NetBSD gcc and I don't see anything immediately wrong that should compile the wrong C++. I wonder if the gcc options accidentally disable std::thread? Or maybe it's disabled somewhere else on NetBSD by default? Not sure why that happened :(",FALSE,TRUE,58,18,68,5,FALSE,TRUE,TRUE,TRUE,0,19
alexcrichton,"Some other tips I'd have is:",FALSE,TRUE,6,18,69,6,FALSE,TRUE,FALSE,TRUE,0,19
alexcrichton,"You can run docker images locally via ./src/ci/docker/run.sh $image_name which can help with debugging (e.g. avoiding going through Travis). That should in theory use the precise same environment as Travis modulo kernel and hardware.",FALSE,TRUE,34,18,70,7,FALSE,TRUE,TRUE,TRUE,0,19
alexcrichton,"For suspected LLVM bugs the best way (although certainly not the fastest way) that I know to work with them is to (a) get it to reproduce with a manual rustc invocation then (b) get it to reproduce with an opt invocation by using rustc to generate LLVM IR then switching to LLVM's tools and then (c) minimizing that IR as much as possible. If it's small enough then reporting a bug on LLVM's issue tracker is usually good for getting the issue fixed in a timely fashion.",FALSE,TRUE,88,18,71,8,FALSE,TRUE,FALSE,TRUE,0,19
TimNN,"You can run docker images locally via ./src/ci/docker/run.sh $image_name which can help with debugging (e.g. avoiding going through Travis). That should in theory use the precise same environment as Travis modulo kernel and hardware.",FALSE,TRUE,34,19,72,0,TRUE,TRUE,TRUE,TRUE,0,20
TimNN,"Yeah, I'm doing that right now :)",FALSE,TRUE,7,19,73,1,TRUE,TRUE,FALSE,TRUE,0,20
TimNN,"Alright, so the problem is, I think, that the following ./configure check fails when compiling: checking for gthreads library... no",FALSE,TRUE,20,19,75,3,TRUE,TRUE,FALSE,TRUE,0,20
alexcrichton,"@TimNN heh yeah that'd do it! I wonder if some more headers need to be copied from the NetBSD base system or something like that? Unfortunately I forget now at this point where I got those instructions from to build a NetBSD cross-compiler...",FALSE,TRUE,43,20,76,0,FALSE,TRUE,FALSE,TRUE,0,21
mattico,"Those warnings aren't new. I forget the cause.Edit: meaning the compiler-rt function signature warnings which seem to have disappeared...",FALSE,FALSE,19,21,77,0,FALSE,TRUE,FALSE,TRUE,0,22
TimNN,"Some notes on the armhf-gnu image:",FALSE,TRUE,6,22,78,0,TRUE,FALSE,FALSE,TRUE,0,23
TimNN,"I (once) got the same LLVM assertion as on android, this went away when retrying the build. I'll try to get this to reliably reproduce.",FALSE,TRUE,25,22,79,1,TRUE,TRUE,FALSE,TRUE,0,23
TimNN,"The qemu connection errors happen non deterministically, as far as I can tell, example: run-pass ran successfully, incremental failed afterwards, after a retry all ofrun-pass failed.",FALSE,TRUE,26,22,80,2,TRUE,TRUE,FALSE,TRUE,0,23
TimNN,"Now I got a segfault... and no idea what actually segfaulted...",FALSE,TRUE,11,22,81,3,TRUE,TRUE,FALSE,TRUE,0,23
alexcrichton,"Odd! I wouldn't entirely rule out a bug in qemu-test-{client,server} FWIW",FALSE,TRUE,11,23,82,0,FALSE,TRUE,FALSE,TRUE,0,24
TimNN,"First of all a small progress update: Of the 25 Docker based builds, 16 build without problems, 2 required (small) fixes, 2 timed out on travis but succeeded locally and 5 are currently broken. I'll investigate the broken images over the next days when I have the time.",FALSE,TRUE,48,24,83,0,TRUE,TRUE,FALSE,TRUE,0,25
TimNN,"Some notes on the android failure:",FALSE,TRUE,6,24,84,1,TRUE,TRUE,FALSE,TRUE,0,25
TimNN,"The arm-android image causes an llvm assertion:",FALSE,TRUE,7,24,85,2,TRUE,TRUE,FALSE,TRUE,0,25
TimNN,"This happens while compiling the coretest crate:",FALSE,TRUE,7,24,86,3,TRUE,TRUE,FALSE,TRUE,0,25
TimNN,"While running llvm passes, full backtrace:",FALSE,TRUE,6,24,87,4,TRUE,TRUE,FALSE,TRUE,0,25
TimNN,"I will attempt to build llvm / rustc with debug info tomorrow to get some more information on what is going on.",FALSE,TRUE,22,24,88,5,TRUE,TRUE,FALSE,TRUE,0,25
alexcrichton,"@TimNN FWIW timing out on travis may be fixed by re-running. If travis has a cold cache for both the docker image and LLVM it's likely to fail, but with sccache you'll likely cache LLVM the first time so the second build will have it cached (just a guess). If it passes locally though I'd be pretty confident that it'll pass on Travis.",FALSE,TRUE,63,25,89,0,FALSE,TRUE,FALSE,TRUE,0,26
alexcrichton,"Also thank you so much again for taking this on!",FALSE,TRUE,10,25,90,1,FALSE,TRUE,FALSE,TRUE,0,26
TimNN,"I have (somewhat) minified the android assertion, compiling the generated llvm IR with llc triggers the same assertion. The assertion only triggers when compiling with optimizations. IR and the minified example: https://gist.github.com/52fcea6426c872869269114c47f96e1f",FALSE,TRUE,32,26,91,0,TRUE,TRUE,FALSE,TRUE,0,27
TimNN,"Bugpoint minified IR: https://gist.github.com/fa2cdcabaa481d619277d1c2ea9d04b4",FALSE,TRUE,4,27,92,0,TRUE,TRUE,FALSE,TRUE,0,28
alexcrichton,"Nice! Want to submit that upstream?",FALSE,TRUE,6,28,93,0,FALSE,TRUE,FALSE,TRUE,0,29
TimNN,"Yeah, I'll just try to reproduce with an official llvm 4.0 build first.",FALSE,TRUE,13,29,94,0,TRUE,TRUE,FALSE,TRUE,0,30
TimNN,"Upstream bug: https://bugs.llvm.org/show_bug.cgi?id=32130",FALSE,TRUE,3,30,95,0,TRUE,FALSE,FALSE,TRUE,0,31
bors,"â˜”ï¸? The latest upstream changes (presumably #40207) made this pull request unmergeable. Please resolve the merge conflicts.",FALSE,TRUE,17,31,96,0,FALSE,TRUE,FALSE,TRUE,0,32
TimNN,"I've been investigating the volatile emscripten failure a bit: It appears that the write_volatile (or the reading during verification) is miss optimized, see https://gist.github.com/TimNN/a43fc1376888e1d39ea5e9b93c099478 for the rust source, compilation options as well as optimized and unoptimized IR.",FALSE,TRUE,37,32,98,1,TRUE,TRUE,FALSE,TRUE,0,33
TimNN,"cc @kripken -- maybe you could take a look? The IR is sadly not freestanding (and depends on some rust libraries) but maybe you can see something anyway? I'm not sure how to debug this further -- if you have something I should try / do feel free to ping me here or on irc.",FALSE,TRUE,55,32,99,2,TRUE,TRUE,TRUE,TRUE,0,33
kripken,"@TimNN: looks like the ExpandStructRegs pass is doing something wrong. It translates a bunch of insertvalues + a store volatile of their result into a bunch of store volatiles of undef. So it's losing the actual data, and only 0s will be stored.",FALSE,TRUE,43,33,101,1,FALSE,TRUE,FALSE,TRUE,0,34
kripken,"That pass is originally from NaCl, and I'm not that familiar with its internals. So first thing that could help is to know if this is a new pattern of IR being generated? Is this a new test in 4.0, or is Rust in 4.0 generating something it didn't use to?",FALSE,TRUE,51,33,102,2,FALSE,TRUE,FALSE,TRUE,0,34
kripken,"In particular, the relevant type here is %E = type { [32 x i64] }, that's what that pass is trying to legalize. Perhaps the pass can't handle arrays inside structs.",FALSE,TRUE,31,33,103,3,FALSE,TRUE,FALSE,TRUE,0,34
kripken,"Here's a before and after of the important part. The store volatile i64 undefs are what is wrong in the after.",FALSE,TRUE,21,34,104,0,FALSE,TRUE,FALSE,TRUE,0,35
TimNN,"So first thing that could help is to know if this is a new pattern of IR being generated? Is this a new test in 4.0, or is Rust in 4.0 generating something it didn't use to?",FALSE,TRUE,37,35,107,2,TRUE,TRUE,FALSE,TRUE,0,36
TimNN,"The test is not new and the generated IR is exactly the same before and after the llvm upgrade. So it is my believe that something in LLVM / emscripten changed for 4.0 causing this failure (although I don't currently have a way to test that).",FALSE,TRUE,46,35,108,3,TRUE,TRUE,FALSE,TRUE,0,36
TimNN,"Another note: Things work fine if the array is not wrapped in a struct, see https://gist.github.com/TimNN/419a598a0c5795dc2a83657ae684539f for source code and IR.",FALSE,TRUE,21,36,110,1,TRUE,TRUE,FALSE,TRUE,0,37
kripken,"Ok, if it's the same IR as before, then either LLVM is optimizing it differently, or emscripten is compiling it differently. Running opt -O3 on the unoptimized ll from your gist results in the same output in both LLVM versions (well, minus a new nonnull attr). And running emscripten on that gives me the same results as well. However, when I opt -O3 your unoptimized code, I don't get the same optimized code - so perhaps the optimization flags matter. How are you generating the optimized code?",FALSE,TRUE,87,37,113,2,FALSE,TRUE,FALSE,TRUE,0,38
TimNN,"Running opt -O3 on the unoptimized ll from your gist results in the same output in both LLVM versions",FALSE,TRUE,19,38,114,0,TRUE,TRUE,FALSE,TRUE,0,39
TimNN,"However, when I opt -O3 your unoptimized code, I don't get the same optimized code",FALSE,TRUE,15,38,115,1,TRUE,TRUE,FALSE,TRUE,0,39
TimNN,"I guess one of those should be optimized? (Which one?)",FALSE,TRUE,10,38,116,2,TRUE,TRUE,TRUE,TRUE,0,39
TimNN,"How are you generating the optimized code?",FALSE,TRUE,7,38,117,3,TRUE,TRUE,FALSE,TRUE,0,39
TimNN,"The optimized code is generated using opt -S -O1 vol.ll -o vol-opt.ll",FALSE,TRUE,12,38,118,4,TRUE,TRUE,FALSE,TRUE,0,39
TimNN,"By the way -- I don't need to run opt again, just compiling the -opt.ll files with emcc (-O0) is enough to trigger the bad code. See https://gist.github.com/TimNN/76ca254f3ad4105dd83d39721a02e118 for the complete emcc command.",FALSE,TRUE,33,39,119,0,TRUE,TRUE,FALSE,TRUE,0,40
kripken,"No typo, both of those were meant to be  unoptimized . What I see is that starting from your unoptimized IR, I end up with bad results in old llvm+emscripten as well as new.",FALSE,TRUE,33,40,120,0,FALSE,TRUE,FALSE,TRUE,0,41
kripken,"Ok, looking at -O1 now, I also see both old and new llvm+emscripten emit the same bad code (with tiny unrelated differences like the new nonnull stuff). So the issue seems to be that if this test worked in the past, it had different unoptimized input IR to begin with.",FALSE,TRUE,50,40,122,2,FALSE,TRUE,FALSE,TRUE,0,41
kripken,"And yes, wrapping an array in a struct seems to be the issue - so if older rust didn't do that wrapping, it could explain this. (But not assign blame, of course, the problem is in that legalization pass, not rust.)",FALSE,TRUE,41,41,124,1,FALSE,TRUE,FALSE,TRUE,0,42
TimNN,"No typo, both of those were meant to be  unoptimized .",FALSE,TRUE,10,42,125,0,TRUE,FALSE,FALSE,TRUE,0,43
TimNN,"Ah, I originally misunderstood what you were saying.",FALSE,TRUE,8,42,126,1,TRUE,TRUE,FALSE,TRUE,0,43
TimNN,"Interesting. I'll be building a full rustc + LLVM 3.9 now and run that test manually, to see what happens.",FALSE,TRUE,20,42,127,2,TRUE,TRUE,FALSE,TRUE,0,43
TimNN,"Alright, manually running the test on rust with llvm 3.9 does fail as well... Now to find out why this is not picked up during normal testing... / occurs in my update builds.",FALSE,TRUE,33,43,128,0,TRUE,TRUE,FALSE,TRUE,0,44
TimNN,"So the mystery why the test passes with rustc + llvm 4.0 is solved, consider the following table and that rust compiles tests with -O2:",FALSE,TRUE,25,44,129,0,TRUE,FALSE,FALSE,TRUE,0,45
TimNN,"Results of the test case with different LLVM version / optimization levels (the -O flag was given directly to rustc):",FALSE,TRUE,20,44,130,1,TRUE,TRUE,FALSE,TRUE,0,45
TimNN,"LLVM 3.9LLVM 4.0",FALSE,TRUE,3,44,131,2,TRUE,TRUE,FALSE,TRUE,0,45
TimNN,"I'm unsure how this relates to your observation that the generated IR is the same for LLVM 3.9 / 4.0 however this at least explains why the test passes on rust pre 4.0.",FALSE,TRUE,33,44,136,7,TRUE,TRUE,FALSE,TRUE,0,45
TimNN,"I have uploaded some more IR at https://gist.github.com/86c800a71b4654912626ad6e13105d90:",FALSE,TRUE,8,44,137,8,TRUE,TRUE,FALSE,TRUE,0,45
TimNN,"the llvm-X.X prefix specifies the llvm used to generate the IR.",FALSE,TRUE,11,44,138,9,TRUE,TRUE,FALSE,TRUE,0,45
TimNN,"the -rust-OX files where generated directly using rustc -Copt-level=X --emit=llvm-ir -o *.ll",FALSE,TRUE,12,44,139,10,TRUE,FALSE,FALSE,TRUE,0,45
TimNN,"the -opt-OX files where generated from the -O0 rust IR: opt -S -OX *-rust-O0.ll -o *.ll",FALSE,TRUE,16,44,140,11,TRUE,TRUE,FALSE,TRUE,0,45
kripken,"Ok, likely what's going on is that emscripten updated llvm since last rust did, and I am using that newer llvm in between the old one and the new one for this PR, since on current emscripten, -O2 fails on 3.9 as well from those IRs, while it doesn't for you with that older llvm. Which indicates that something in the llvm optimizer changed in that first range - likely more aggressive used of insertelement etc.",FALSE,TRUE,76,45,142,1,FALSE,TRUE,FALSE,TRUE,0,46
kripken,"In any case, the result is almost certainly that that legalization pass needs to be fixed. Does that block this PR? Might be worth just disabling that test for now if it's the last thing.",FALSE,TRUE,35,45,144,3,FALSE,TRUE,FALSE,TRUE,0,46
TimNN,"Does that block this PR?",FALSE,TRUE,5,46,145,0,TRUE,TRUE,FALSE,TRUE,0,47
TimNN,"Not (yet), there are still some other things which need to be fixed. Among them is one other emscripten failure (related to packed structs, I think), however I have not yet had the time to investigate that.",FALSE,TRUE,37,46,146,1,TRUE,TRUE,FALSE,TRUE,0,47
TimNN,"Thanks a lot for the help so far!",FALSE,TRUE,8,46,147,2,TRUE,TRUE,FALSE,TRUE,0,47
TimNN,"By the way, rust uses the 1.37.1 tag of emscripten IIRC, however I don't know which exact llvm version is used by rust itself.",FALSE,TRUE,24,46,148,3,TRUE,TRUE,FALSE,TRUE,0,47
pftbest,"Rust is using llvm revision 282753. It is somewhere between 3.9 and 3.9.1 release.",FALSE,FALSE,14,47,149,0,FALSE,TRUE,FALSE,TRUE,0,48
TimNN,"So the second emscripten failure is actually due to #27060 I believe: rustc emits loads to unaligned pointers (to contents of a #[repr(packed)] struct) without marking them as unaligned. The test passed previously when compiled with -O2 (which is what the test runner uses) put not with -O0.",FALSE,TRUE,48,48,150,0,TRUE,TRUE,FALSE,TRUE,0,49
TimNN,"Here is a small sample program which demonstrates the problem (with -O0):",FALSE,TRUE,12,48,151,1,TRUE,TRUE,FALSE,TRUE,0,49
arielb1,"Can you instead fix the test to not UB?",FALSE,FALSE,9,49,155,2,FALSE,TRUE,FALSE,TRUE,0,50
TimNN,"@arielb1: Probably, I'll take a look.",FALSE,TRUE,6,50,156,0,TRUE,TRUE,FALSE,TRUE,0,51
pftbest,"@arielb1 Are you sure there is UB in this test?",FALSE,FALSE,10,51,157,0,FALSE,TRUE,FALSE,TRUE,0,52
arielb1,"Sure enough. The derive(PartialEq) impl of packed structs exploits a known soundness bug to create and dereference references to unaligned values. Writing the derive impls manually should fix that.",FALSE,TRUE,29,52,159,1,FALSE,TRUE,TRUE,TRUE,0,53
pftbest,"@arielb1 Can you please give me the issue number?",FALSE,TRUE,9,53,160,0,FALSE,TRUE,FALSE,TRUE,0,54
pftbest,"@arielb1 Sorry, I didn't notice it in TimNN's message. Thank you very much.",FALSE,TRUE,13,55,162,0,FALSE,TRUE,FALSE,TRUE,0,56
TimNN,"I've been investigating some of the failures some more:",FALSE,TRUE,9,56,163,0,TRUE,FALSE,FALSE,TRUE,0,57
TimNN,"I currently can't reproduce the powerpc failure (locally). I'll try travis again at some point.",FALSE,TRUE,15,56,164,1,TRUE,TRUE,FALSE,TRUE,0,57
TimNN,"The qemu-test-server segfaults, which causes the armhf-gnu failure. I don't know yet why or where.",FALSE,TRUE,15,56,165,2,TRUE,TRUE,FALSE,TRUE,0,57
TimNN,"After lots of printf debugging (anyone know how to easily use gdb with qemu?) I've identified and (somewhat) minified the segfault.",FALSE,TRUE,21,57,166,0,TRUE,TRUE,FALSE,TRUE,0,58
TimNN,"As far as I can tell three things are required for the segfault to occur:",FALSE,TRUE,15,57,167,1,TRUE,TRUE,FALSE,TRUE,0,58
TimNN,"A function returning a u32",FALSE,TRUE,5,57,168,2,TRUE,TRUE,FALSE,TRUE,0,58
TimNN,"Which is immediately cast to a u64 and assigned to a variable",FALSE,TRUE,12,57,169,3,TRUE,TRUE,FALSE,TRUE,0,58
TimNN,"That variable is printed (which probably means a reference is taken and then dereferenced)",FALSE,TRUE,14,57,170,4,TRUE,TRUE,FALSE,TRUE,0,58
TimNN,"Edit: Nevermind that, the problem seems to be somewhere else.",FALSE,TRUE,10,57,171,5,TRUE,TRUE,FALSE,TRUE,0,58
TimNN,"To reproduce use this code as the qemu-test-client and send any four bytes. Sending any four bytes to the server should show @@EXIT@@: 11 in the output.",FALSE,TRUE,27,57,172,6,TRUE,TRUE,TRUE,TRUE,0,58
TimNN,"I'll try to reduce this a bit further and submit an upstream bug report.",FALSE,TRUE,14,57,173,7,TRUE,TRUE,FALSE,TRUE,0,58
TimNN,"Edit: Never mind this post, see the next post.",FALSE,TRUE,9,58,174,0,TRUE,TRUE,FALSE,TRUE,0,59
TimNN,"Further minified:",FALSE,TRUE,2,58,175,1,TRUE,TRUE,FALSE,TRUE,0,59
TimNN,"This crashes on -O0 as well.",FALSE,TRUE,6,58,176,2,TRUE,TRUE,FALSE,TRUE,0,59
TimNN,"The IR looks good to me, see this gist.",FALSE,TRUE,9,58,177,3,TRUE,TRUE,FALSE,TRUE,0,59
TimNN,"I apparently made some wrong assumptions in the previous two posts, the actual issue seems to be with the Display implementation of u64, at least that's where the segfault occurs in the following reduced test case: 0xFFFFFFFFu64.to_string();.",FALSE,TRUE,37,59,178,0,TRUE,TRUE,FALSE,TRUE,0,60
TimNN,"Which raises another question: The original qemu-test-server never calls that method (at least not directly), so where does it segfault?",FALSE,TRUE,20,59,179,1,TRUE,TRUE,FALSE,TRUE,0,60
TimNN,"Anyway, I got the following backtrace from a core dump (qemu has so far resisted all my attempts to directly debug it):",FALSE,TRUE,22,59,180,2,TRUE,TRUE,FALSE,TRUE,0,60
TimNN,"The segfault only occurs if std is compiled with optimizations. configureing with --disable-optimize makes that segfault from the reduced test cases go away and the qemu-test-server seems to be stable so far. Lets see how the the actual tests go...",FALSE,TRUE,40,60,181,0,TRUE,TRUE,FALSE,TRUE,0,61
TimNN,"... so I just got a rather interesting failure of the qemu-test-server:",FALSE,TRUE,12,60,182,1,TRUE,TRUE,FALSE,TRUE,0,61
TimNN,"Running with RUST_BACKTRACE=1 produces this:",FALSE,TRUE,5,60,183,2,TRUE,TRUE,FALSE,TRUE,0,61
TimNN,"Don't ask me where the negative line numbers come from, some of the others seem to be incorrect as well.",FALSE,TRUE,20,60,184,3,TRUE,TRUE,FALSE,TRUE,0,61
TimNN,"Running with RUST_BACKTRACE=full causes the following output (and then hangs):",FALSE,TRUE,10,60,185,4,TRUE,TRUE,FALSE,TRUE,0,61
TimNN,"I'm not sure if I messed something up along the road but something seems to be seriously broken here.",FALSE,TRUE,19,60,186,5,TRUE,TRUE,FALSE,TRUE,0,61
alexcrichton,"Oh dear sounds like something is definitely going seriously wrong :(",FALSE,TRUE,11,61,187,0,FALSE,FALSE,FALSE,TRUE,0,62
alexcrichton,"My guess would be a miscompile or a misoptimization, although historically LLVM upgrades have uncovered existing bugs in the compiler which were only exploited by the newer LLVM version, so this may very well also be a bug in our own codegen.",FALSE,TRUE,42,61,188,1,FALSE,TRUE,FALSE,TRUE,0,62
pftbest,"I see debuginfo-lldb/union-smoke.rs test failing on x86_64-apple-darwinIs it ok? full log",FALSE,TRUE,11,62,189,0,FALSE,FALSE,FALSE,TRUE,0,63
TimNN,"@pftbest: It's not ok, however a known issue -- there's a problem with debuginfo for globals (I have ignored the affected tests on gdb for now, until I get around to fixing the issue). I would actually have expected more lldb test failures.",FALSE,TRUE,43,63,190,0,TRUE,TRUE,FALSE,TRUE,0,64
bors,"â˜”ï¸? The latest upstream changes (presumably #40257) made this pull request unmergeable. Please resolve the merge conflicts.",FALSE,TRUE,17,64,191,0,FALSE,TRUE,FALSE,TRUE,0,65
TimNN,"Well, I'm not sure I'm happy about finding this, but it seems that we are (once again) having problems with compiler-rt, consider:",FALSE,TRUE,22,65,192,0,TRUE,TRUE,FALSE,TRUE,0,66
TimNN,"An info locals from the coredump reveals:",FALSE,TRUE,7,65,193,1,TRUE,TRUE,FALSE,TRUE,0,66
TimNN,"So the problem is apparently with __udivsi3 (which comes from libgcc_s.so.1!!): The arguments are passed in r0 and r1, but then the returned value is 15 in r0.",FALSE,TRUE,28,66,194,0,TRUE,TRUE,FALSE,TRUE,0,67
TimNN,"I now checked with the current nightly: Here, __udivsi3 originates from the compiled binary -- so apparently our compiler-rt is used.",FALSE,TRUE,21,66,195,1,TRUE,TRUE,FALSE,TRUE,0,67
TimNN,"Which now brings up the question what changed to make us fall back on gcc_s with LLVM 4.0? The only thing I can think of is the compiler-rt submodule update, I'll investigate what changed there.",FALSE,TRUE,35,66,197,3,TRUE,TRUE,FALSE,TRUE,0,67
TimNN,"On another note, I noticed that binaries compiled with LLVM 4.0 take significantly longer to start than those generate with a current rust nightly -- I don't know yet why or if this is even relevant.",FALSE,TRUE,36,66,198,4,TRUE,TRUE,FALSE,TRUE,0,67
alexcrichton,"@TimNN holy cow you are crazy deep in  debug everything  land, but nice find! It's odd that compiler-rt is often the last suspect and more commonly than not the actual suspect...",FALSE,TRUE,31,67,199,0,FALSE,TRUE,FALSE,TRUE,0,68
alexcrichton,"cc @japaric, you may have thoughts here as well.",FALSE,TRUE,9,67,200,1,FALSE,FALSE,FALSE,TRUE,0,68
TimNN,"One thing I noticed while poking around at things is in the output of readelf on the generated binaries (grepped for udivsi3):",FALSE,TRUE,22,68,201,0,TRUE,TRUE,FALSE,TRUE,0,69
TimNN,"I know that there have been discussions of marking functions as hidden, so maybe the above tells someone something?",FALSE,TRUE,19,68,202,1,TRUE,TRUE,FALSE,TRUE,0,69
TimNN,"Edit: Note that in the libcompiler_builtins.rlib, the symbol is marked as GLOBAL HIDDEN in both cases.",FALSE,TRUE,16,68,203,2,TRUE,TRUE,FALSE,TRUE,0,69
alexcrichton,"Hm that seems unusual. We try to compile that symbol as a hidden symbol, but that's just a flag we pass to the compiler when compiling compiler-rt. I'm not sure how that would change here... Unless the symbol was dropped/moved in the compiler-rt upgrade?",FALSE,TRUE,44,69,204,0,FALSE,TRUE,FALSE,TRUE,0,70
TimNN,"And things are getting interesting again: The interesting symbol is __aeabi_uidiv (which is, of course, an alias for __udivsi3...): Now checking the libcomiler_builtins.rlib files for that symbol gives the following results:",FALSE,TRUE,31,70,205,0,TRUE,TRUE,FALSE,TRUE,0,71
alexcrichton,"Looks like a bunch of thumb related changes happened to what I believe is the relevant file during the last upgrade.",FALSE,TRUE,21,71,206,0,FALSE,TRUE,FALSE,TRUE,0,72
alexcrichton,"llvm-mirror/compiler-rt@b11de00 also looks suspicious maybe? (just guessing here)",FALSE,TRUE,8,71,207,1,FALSE,FALSE,FALSE,TRUE,0,72
TimNN,"llvm-mirror/compiler-rt@b11de00 also looks suspicious maybe? (just guessing here)",FALSE,TRUE,8,72,208,0,TRUE,FALSE,FALSE,TRUE,0,73
TimNN,"Indeed, I'll see what happens if I revert that.",FALSE,TRUE,9,72,209,1,TRUE,TRUE,FALSE,TRUE,0,73
TimNN,"llvm-mirror/compiler-rt@b11de00 also looks suspicious maybe? (just guessing here)",FALSE,TRUE,8,73,210,0,TRUE,FALSE,FALSE,TRUE,0,74
TimNN,"Indeed, I'll see what happens if I revert that.",FALSE,TRUE,9,73,211,1,TRUE,TRUE,FALSE,TRUE,0,74
TimNN,"Well, that didn't work. On the other hand, I discovered that GDB was being annoying and the whole visibility thing was entirely the wrong direction:",FALSE,TRUE,25,73,212,2,TRUE,TRUE,FALSE,TRUE,0,74
TimNN,"In the disassembly of my test program, gdb showed bl 0xf6fddee8 <__udivsi3>",FALSE,TRUE,12,73,213,3,TRUE,TRUE,FALSE,TRUE,0,74
TimNN,"Checking info symbol __udivsi3 says the symbol came from libgcc_s.so.1",FALSE,TRUE,10,73,214,4,TRUE,TRUE,FALSE,TRUE,0,74
TimNN,"Checking info symbol 0xf6fddee8 says the symbol comes from my binary",FALSE,TRUE,11,73,215,5,TRUE,TRUE,FALSE,TRUE,0,74
TimNN,"So we are apparently miscompiling comiler-rt -- which does seem more reasonable than libgcc_s being broken.",FALSE,TRUE,16,73,217,7,TRUE,TRUE,FALSE,TRUE,0,74
TimNN,"So, reverting llvm-mirror/compiler-rt@2fb759f seems to fix my small __udivsi3 test case, however I'm still getting the raw_cap overflow panic, let's try to revert another of the thumb commits.",FALSE,TRUE,28,74,218,0,TRUE,TRUE,FALSE,TRUE,0,75
alexcrichton,"It may be worth running a compilation by hand using cmake (compiler-rt's build system) and comparing the flags passed, they may be passing a crucial flag that we're missing :(",FALSE,TRUE,30,75,220,1,FALSE,TRUE,FALSE,TRUE,0,76
TimNN,"Progress! With a second commit reverted and a clean rebuild of the arm stuff (not sure if the second revert was necessary) some tests seem to be running now!",FALSE,TRUE,29,76,221,0,TRUE,TRUE,FALSE,TRUE,0,77
TimNN,"However some tests (not all) are failing because we get a undefined reference to core::panicking::panic::h6e43017a4193bfc4 while linking (with -Cprefer-dynamic). Lets investigate...",FALSE,TRUE,21,76,222,1,TRUE,TRUE,FALSE,TRUE,0,77
TimNN,"So, if I understand the output of nm libstd.so correctly, then the core::panicking::panic::h6e43017a4193bfc4 symbol is  local , which could be a problem?",FALSE,TRUE,21,76,223,2,TRUE,TRUE,FALSE,TRUE,0,77
alexcrichton,"I wonder if __ARM_ARCH_ISA_THUMB introduced in that commit is defined by compiler-rt's cmake build? Nothing jumped out to me but I'm not sure... We may just not be compiling with the right flags as well (or be targetting something completely different). I've never gotten a good handle on what appears to be a myriad of ARM targets...",FALSE,TRUE,57,77,225,1,FALSE,TRUE,FALSE,TRUE,0,78
alexcrichton,"That symbol in theory should be public yeah, although I've also never been able to decipher the output of nm so I'm not sure if that's the right visibility or not (have I mentioned that I've also never been able to keep the myriad of visibility/linkage settings straight in my head either?).",FALSE,TRUE,52,77,226,2,FALSE,TRUE,TRUE,TRUE,0,78
alexcrichton,"@TimNN does it print out where that undefined reference is coming from? It may be related to #40254 if you haven't picked that up yet maybe. Or it may also be somewhere else in libcompiler_builtins which is accidentally wanting to unwind when it shouldn't want to be.",FALSE,TRUE,47,77,227,3,FALSE,TRUE,TRUE,TRUE,0,78
TimNN,"@alexcrichton: I have #40254 in my branch, the undefined references are in the main code, examples:",FALSE,TRUE,16,78,228,0,TRUE,TRUE,FALSE,TRUE,0,79
TimNN,"By the way, these are the failing tests:",FALSE,TRUE,8,78,229,1,TRUE,TRUE,FALSE,TRUE,0,79
TimNN,"I can also reproduce with a program that simply panic!()s in main:",FALSE,TRUE,12,78,230,2,TRUE,TRUE,FALSE,TRUE,0,79
alexcrichton,"Ok yeah that seems entirely unrelated to compiler-rt.",FALSE,TRUE,8,79,231,0,FALSE,FALSE,FALSE,TRUE,0,80
alexcrichton,"Can you check the IR generated for libcore? It may be helpful to take a look at the function definition for this symbol to see what we're telling LLVM. (hint: it shouldn't be internal)",FALSE,TRUE,34,79,232,1,FALSE,TRUE,TRUE,TRUE,0,80
TimNN,"Re: __ARM_ARCH_ISA_THUMB: I think we don't want that flag to be defined (to keep the old implementation), however compiling the following small test program with my cross compiler, reveals that __ARM_ARCH_ISA_THUMB is automatically defined...",FALSE,TRUE,34,80,234,1,TRUE,TRUE,FALSE,TRUE,0,81
TimNN,"Can you check the IR generated for libcore?",FALSE,TRUE,8,81,235,0,TRUE,TRUE,FALSE,TRUE,0,82
TimNN,"I can do so momentarily, however at least the libcore rlib seems to have the symbol publicly defined:",FALSE,TRUE,18,81,236,1,TRUE,TRUE,FALSE,TRUE,0,82
TimNN,"How are the shared libraries generated?",FALSE,TRUE,6,81,237,2,TRUE,TRUE,FALSE,TRUE,0,82
TimNN,"By the way, forget the __ARM_ARCH_ISA_THUMB: I think we don't want that flag to be defined (to keep the old implementation) from the previous comment, I don't think that is correct.",FALSE,TRUE,31,81,239,4,TRUE,TRUE,FALSE,TRUE,0,82
TimNN,"For the record my cross compiler uses:",FALSE,TRUE,7,82,240,0,TRUE,FALSE,FALSE,TRUE,0,83
alexcrichton,"We should just run basically:",FALSE,TRUE,5,83,241,0,FALSE,FALSE,TRUE,TRUE,0,84
alexcrichton,"(e.g. nothing fancy or LLVM dependent there)",FALSE,TRUE,7,83,242,1,FALSE,TRUE,FALSE,TRUE,0,84
TimNN,"I get the following function definition:",FALSE,TRUE,6,84,243,0,TRUE,FALSE,FALSE,TRUE,0,85
TimNN,"Alright, so I think I know some of what is going on, however how that is different from LLVM 3.9, I don't know (yet):",FALSE,TRUE,24,85,244,0,TRUE,TRUE,FALSE,TRUE,0,86
TimNN,"As it turns out, libcompiler_builtins has references to core::panicking::panic! And if it is linked into the .so after libcore, the symbol gets hidden (I've only checked the nm, not yet a test compilation).",FALSE,TRUE,33,85,245,1,TRUE,TRUE,FALSE,TRUE,0,86
TimNN,"For the record, the following functions call core::panicking::panic (if I'm reading the output of readelf correctly):",FALSE,TRUE,16,85,246,2,TRUE,TRUE,FALSE,TRUE,0,86
TimNN,"cc @nagisa You fixed this (or something similar) in #40254, could you maybe take a look?",FALSE,TRUE,16,85,247,3,TRUE,TRUE,FALSE,TRUE,0,86
TimNN,"So, apparently, the problem with the panic references is that compiler_builtins was compiled without optimizations. Whether this is ARM specific or caused by LLVM 4.0, I don't know yet, we'll see.",FALSE,TRUE,31,86,248,0,TRUE,TRUE,FALSE,TRUE,0,87
alexcrichton,"Oh dear, that sounds bad! Note that with or without optimizations, the compiler builtins crate shouldn't reference any panic symbols...",FALSE,TRUE,20,87,249,0,FALSE,TRUE,TRUE,TRUE,0,88
nagisa,"The panicking is introduced by overflowing_sh* which has implementation that looks like this:",FALSE,TRUE,13,88,250,0,FALSE,FALSE,FALSE,TRUE,0,89
nagisa,"That shift over there is a checked shift and does not get optimised in no-opt mode. wrapping_sh* are implemented in terms of this overflowing_sh*. These could be fixed with some intrinsics, maybe?",FALSE,TRUE,32,88,251,1,FALSE,TRUE,FALSE,TRUE,0,89
nagisa,"Alternatively, is there maybe a way to disable debug-assertions on a per-function basis?",FALSE,TRUE,13,88,253,3,FALSE,TRUE,FALSE,TRUE,0,89
alexcrichton,"@TimNN want to try out conversion to the wrapping versions and see what happens?",FALSE,TRUE,14,89,255,1,FALSE,FALSE,FALSE,TRUE,0,90
TimNN,"@alexcrichton: I don't think that would work, we would have infinite recursion then, according to @nagisa.",FALSE,TRUE,16,90,257,1,TRUE,TRUE,FALSE,TRUE,0,91
nagisa,"Wrapping shifts are implemented in terms of the overflowing_sh*. At thevery least an intrinsic will be necessary.",FALSE,TRUE,17,91,259,1,FALSE,TRUE,FALSE,TRUE,0,92
nagisa,"On Mar 14, 2017 07:31,  Tim Neumann  ***@***.***> wrote:@alexcrichton <https://github.com/alexcrichton>: I don't think that wouldwork, we would have infinite recursion then, according to @nagisa<https://github.com/nagisa>.",FALSE,TRUE,24,91,262,4,FALSE,TRUE,FALSE,TRUE,0,92
nagisa,"â€”You are receiving this because you were mentioned.Reply to this email directly, view it on GitHub<#40123 (comment)>, or mutethe thread<https://github.com/notifications/unsubscribe-auth/AApc0hbDZGtt9B08ROSTuBx4V4SAqcJ-ks5rliY0gaJpZM4MNOAe>.",FALSE,TRUE,20,91,263,5,FALSE,TRUE,FALSE,TRUE,0,92
TimNN,"I opened #40508 for the ARM / panic failure.",FALSE,TRUE,9,92,264,0,TRUE,TRUE,FALSE,TRUE,0,93
TimNN,"So some (mostly good, I guess) news: A (once again) optimized ARM build with the two commits mentioned previously reverted leads to almost all run-pass tests passing, with three (issue-28950.rs, run-pass/panic-runtime/abort.rs and run-pass/panic-runtime/abort-link-to-unwinding-crates.rs) hanging... somewhere. I'll investigate those as well as a  proper  fix for the reverted commits.",FALSE,TRUE,48,93,265,0,TRUE,TRUE,FALSE,TRUE,0,94
TimNN,"Investigation results (on a Raspberry Pi 2):",FALSE,TRUE,7,94,266,0,TRUE,TRUE,FALSE,TRUE,0,95
TimNN,"issue-28950.rs: segfault injemalloc::arena_run_split_remove -> std::sys::imp::stack_overflow::imp::signal_handler -> thread local cleanup / atexit -> jemalloc -> deadlock",FALSE,TRUE,15,94,267,1,TRUE,FALSE,FALSE,TRUE,0,95
TimNN,"abort.rs: Runs fine without RUST_BACKTRACE, with =1 it hangs somewhere during unwinding (although I don't think we set RUST_BACKTRACE by default when running tests?), potentially a dead lock as well",FALSE,TRUE,30,94,268,2,TRUE,TRUE,FALSE,TRUE,0,95
TimNN,"abort-link-to-unwinding-crates.rs: Same as abort.rs",FALSE,TRUE,4,94,269,3,TRUE,TRUE,FALSE,TRUE,0,95
alexcrichton,"@TimNN we're still running into jemalloc dealocks?!",FALSE,TRUE,7,95,270,0,FALSE,FALSE,FALSE,TRUE,0,96
alexcrichton,":( :( :( :( :(",FALSE,TRUE,5,95,271,1,FALSE,FALSE,FALSE,TRUE,0,96
TimNN,"@alexcrichton: Apparently :( Although it only happened after a segfault, so it's probably not that bad? Here is the backtrace, in case you are interested: https://gist.github.com/0b02e3fae217490cd004ea8a58b22f83",FALSE,TRUE,26,96,272,0,TRUE,TRUE,FALSE,TRUE,0,97
TimNN,"Regarding the issue-28950.rs segfault / deadlock:",FALSE,TRUE,6,97,273,0,TRUE,FALSE,FALSE,TRUE,0,98
TimNN,"I can only assume that somehow jemalloc is miscompiled: The failures happens in the newly started thread, before any user code is run.",FALSE,TRUE,23,97,274,1,TRUE,TRUE,FALSE,TRUE,0,98
TimNN,"Now consider these three lines from the gdb stacktrace:",FALSE,TRUE,9,97,275,2,TRUE,TRUE,FALSE,TRUE,0,98
TimNN,"The relevant jemalloc code.",FALSE,TRUE,4,97,276,3,TRUE,TRUE,FALSE,TRUE,0,98
TimNN,"Notice how arena is 0x766011c0 in arena_run_alloc_large, but when it is passed to arena_run_alloc_large_helper, it is NULL (and then later dereferenced in a probably inlined function?).",FALSE,TRUE,26,97,277,4,TRUE,TRUE,FALSE,TRUE,0,98
TimNN,"I'm not sure if these symptoms are indicative of a stackoverflow or not, however the test seems to deliberately test something in that regard.",FALSE,TRUE,24,97,278,5,TRUE,TRUE,FALSE,TRUE,0,98
alexcrichton,"Note that I would at least personally have no problem jettisoning jemalloc further, especially if there's problems. If disabling jemalloc solves the issue, I say do that.",FALSE,TRUE,27,98,279,0,FALSE,TRUE,FALSE,TRUE,0,99
TimNN,"@alexcrichton: Yeah, I was planning to try a --disable-jeamlloc build next.",FALSE,TRUE,11,99,280,0,TRUE,TRUE,FALSE,TRUE,0,100
brson,"Here's some updates on the emscripten LLVM upgrade: https://internals.rust-lang.org/t/need-help-with-emscripten-port/3154/142",FALSE,TRUE,9,100,281,0,FALSE,TRUE,FALSE,TRUE,0,101
TimNN,"I have tracked down the issue with the llvm IR that causes globals to show as <optimzed out> in GDB, the details can be found in #40580.",FALSE,TRUE,27,101,282,0,TRUE,TRUE,FALSE,TRUE,0,102
TimNN,"I have opened #40612 which updates the NetBSD compiler to one which can compiler LLVM 4.0. That will hopefully lead to a successful dist-s390x-linux-netbsd build.",FALSE,TRUE,25,102,283,0,TRUE,TRUE,FALSE,TRUE,0,103
TimNN,"On another note, I was happily surprised that a build of dist-fuchsia was successful out of the box.",FALSE,TRUE,18,102,284,1,TRUE,TRUE,FALSE,TRUE,0,103
alexcrichton,"Awesome work @TimNN (I really can't tell you that enough)",FALSE,TRUE,10,103,285,0,FALSE,FALSE,FALSE,TRUE,0,104
alexcrichton,"Out of curiosity have you tested this yet on Windows/OSX? Unfortunately those are harder to get testing on this PR (there's some bug for OSX on Travis and we don't have capacity to do so on AppVeyor), but I can start running builds and reporting back locally if that'd help.",FALSE,TRUE,50,103,286,1,FALSE,TRUE,FALSE,TRUE,0,104
TimNN,"@alexcrichton: Not yet, however I think someone commented that they had at least gotten until the debuginfo tests on macOS. I can also test macOS locally however I don't have easy access to a windows machine. So if you (or someone else) wants to test those (especially windows), that would be helpful.",FALSE,TRUE,52,104,287,0,TRUE,TRUE,FALSE,TRUE,0,105
alexcrichton,"Unfortunately MSVC failed pretty quickly in stage1 :(",FALSE,TRUE,8,105,288,0,FALSE,TRUE,FALSE,TRUE,0,106
alexcrichton,"These run-pass tests all fail with the same error, and are likely smaller than all of libsyntax",FALSE,TRUE,17,106,289,0,FALSE,FALSE,FALSE,TRUE,0,107
TimNN,"I have submitted a fix for the android assertion to LLVM: https://reviews.llvm.org/D31116",FALSE,TRUE,12,107,290,0,TRUE,TRUE,FALSE,TRUE,0,108
bors,"â˜”ï¸? The latest upstream changes (presumably #40659) made this pull request unmergeable. Please resolve the merge conflicts.",FALSE,TRUE,17,108,291,0,FALSE,TRUE,FALSE,TRUE,0,109
TimNN,"@alexcrichton: FYI, x86_64-pc-windows-msvc and x86_64-pc-windows-gnu were successful for me. Were your failures for one of those targets?",FALSE,TRUE,17,109,292,0,TRUE,TRUE,FALSE,TRUE,0,110
TimNN,"(Note that I ran my llvm40-tmp branch, which however should only be a cleaned up version of this branch (and rebased on rust master)).",FALSE,TRUE,24,109,293,1,TRUE,TRUE,TRUE,TRUE,0,110
alexcrichton,"Odd! I tested a523fba with x86_64-pc-windows-msvc, but maybe I botched something? If it works for you locally I'd trust that.",FALSE,TRUE,20,110,294,0,FALSE,TRUE,FALSE,TRUE,0,111
alexcrichton,"I thought windows-gnu was in general an awful hurdle to overcome, but if x86_64 already works I didn't think it was i686 specific, but it may be worth double checking if you've got the cycles.",FALSE,TRUE,35,110,295,1,FALSE,TRUE,FALSE,TRUE,0,111
TimNN,"@alexcrichton: Yeah, I'll try i686 tomorrow. (I saw an ad for the microsoft azure free trial yesterday, and decided, why use that for something useful ;)",FALSE,TRUE,26,111,296,0,TRUE,TRUE,FALSE,TRUE,0,112
TimNN,"More windows updates:",FALSE,TRUE,3,112,297,0,TRUE,FALSE,FALSE,TRUE,0,113
TimNN,"i686-pc-windows-msvc fails run-pass\backtrace.rs it seems to work with may work if RUST_BACKTRACE=full is used for the failing test case.",FALSE,TRUE,19,112,298,1,TRUE,TRUE,FALSE,TRUE,0,113
TimNN,"i686-pc-windows-gnu: I use the msys2 mingw, which apparently uses pthreads instead of win32 threads, I'll see if I can't get another build environment set up.",FALSE,TRUE,25,112,299,2,TRUE,TRUE,FALSE,TRUE,0,113
alexcrichton,"Ah OK so on the backtrace business I have a backport to reenable full and there's ongoing discussion of how to work with it. In any case working around locally or setting full should be fine for now.",FALSE,TRUE,38,113,300,0,FALSE,TRUE,TRUE,TRUE,0,114
alexcrichton,"For the latter I'd recommend downloading the literal toolchain used on the bots (downloaded in appveyor.yml) to ensure it's the same, although we can certainly update that whenever we need to as well (we just haven't ever had impetus to do so).",FALSE,TRUE,42,113,301,1,FALSE,TRUE,FALSE,TRUE,0,114
TimNN,"Regarding the backtrace test: cherry-picking @alexcrichton's backport did not fix the test. However adding an explicit RUST_BACKTRACE=1 (no full required) here fixed the test. I'm not entirely sure what that part of the test is testing and if the missing RUST_BACKTRACE=1 is an actual bug which just magically doesn't manifest on other platforms.",FALSE,TRUE,53,114,303,1,TRUE,TRUE,FALSE,TRUE,0,115
TimNN,"I'll try i686-pc-windows-gnu again tomorrow.",FALSE,TRUE,5,114,304,2,TRUE,TRUE,FALSE,TRUE,0,115
TimNN,"I've been experimenting with i686-pc-windows-gnu and the toolchains specified in appveyor.yml: If I understand the situation correctly, we want mingw builds which use win32 threads. This causes problems when compiling llvm, since those toolchains don't have support for std::thread. (I also tried newer versions of those toolchains, same result). (This also means that my success with x86_64-pc-windows-gnu is probably invalid).",FALSE,TRUE,60,115,305,0,TRUE,TRUE,FALSE,TRUE,0,116
TimNN,"As far as I can see we have three options:",FALSE,TRUE,10,115,306,1,TRUE,TRUE,FALSE,TRUE,0,116
TimNN,"Remove all mention of std::thread and related things from llvm -- I believe this was done last time and tried / started to do this when testing freebsd in the beginning. From my impression / memories, I believe that this is not as easily done as last time.",FALSE,TRUE,48,115,308,3,TRUE,TRUE,FALSE,TRUE,0,116
TimNN,"Switch to pthread based mingw -- I'm not sure what the advantages / disadvantages are here. There are apparently reasons for not wanting to do this. Also, I previously tried a build with a pthread based mingw and got some link failures which would need to be debugged.",FALSE,TRUE,48,115,310,5,TRUE,TRUE,FALSE,TRUE,0,116
TimNN,"We could experiment with some hacky? headers which apparently provide the necessary std::threads implementation however lack other things (futures / async / packaged_task or something).",FALSE,TRUE,25,115,312,7,TRUE,TRUE,FALSE,TRUE,0,116
nagisa,"Iâ€™d be inclined to just drop i686-pc-windows-gnu rustc builds altogether if its that troublesome. Except its a Tier 1 platform :/",FALSE,TRUE,21,116,314,1,FALSE,TRUE,FALSE,TRUE,0,117
nagisa,"Also, IIRC pthreads on 32 bit mingw are plain broken anyway.",FALSE,TRUE,11,116,315,2,FALSE,TRUE,FALSE,TRUE,0,117
petrochenkov,"meganz/mingw-std-threads seems to be a commonly advised solution and the way to go in the short term (if it works).It's not as crucial change as switching to pthread model, not so blatantly non-future proof as removing uses of std::thread from LLVM code, and it unblocks the progress towards 4.0.Worths trying at least.",FALSE,FALSE,52,117,317,1,FALSE,TRUE,FALSE,TRUE,0,118
vadimcn,"@TimNN: There were basically two reasons we've avoided pthread-based mingw-w64 toolchain:",FALSE,FALSE,11,118,318,0,FALSE,TRUE,FALSE,TRUE,0,119
vadimcn,"It added a dependency on pthreads dll to all Rust programs compiled with this toolchain (mainly because Rust heavily relied on libc, which, in turn, used pthreads' sync primitives).",FALSE,FALSE,29,118,320,2,FALSE,TRUE,FALSE,TRUE,0,119
vadimcn,"Back then it was found to be very slow, though it seems this may have been fixed since.",FALSE,FALSE,18,118,321,3,FALSE,TRUE,FALSE,TRUE,0,119
vadimcn,"I wouldn't mind switching to pthread-based toolchain for building rustc itself, as long as 1. were still true.I don't remember all the details at the moment, but it should be possible - these days libstd directly calls into native Windows API most of the time.",FALSE,FALSE,45,118,323,5,FALSE,TRUE,TRUE,TRUE,0,119
vadimcn,"I'll try to find time to look into this in the next few days.",FALSE,FALSE,14,118,324,6,FALSE,TRUE,FALSE,TRUE,0,119
alexcrichton,"Yeah unfortunately this may end up being one of the more difficult parts of the LLVM upgrade (not that the parts leading up to this have been easy ...). @vadimcn is right in that we intentionally have not used the pthread toolchain yet for various reasons. The landscape is very different today though from way-back-when, notably MSVC is a thing that is also tier 1.",FALSE,TRUE,65,119,325,0,FALSE,TRUE,FALSE,TRUE,0,120
alexcrichton,"My thoughts on this are in order of preference (but not in order of feasibility):",FALSE,TRUE,15,119,326,1,FALSE,TRUE,FALSE,TRUE,0,120
alexcrichton,"Ideally we stop shipping i686-pc-windows-gnu targets. MinGW just flat out is not supported by LLVM afaik, and yet we keep trying to get it to work. This is unfortunately a pretty invasive change though. While possible I think this is a last resort style option due to the work involved to implement this.",FALSE,TRUE,53,119,328,3,FALSE,TRUE,FALSE,TRUE,0,120
alexcrichton,"Otherwise ideally I like @vadimcn's idea of compiling the compiler with a pthread toolchain. The hard constraint here is that a user-compiled program should not depend on the pthread dll and should be compatible with the win32 toolchain. Note that I think the dependency on the pthread dll arises from the unwinder, not Rust code nowadays. AFAIK libstd uses nothing fro the mingw runtime other than the unwinder (which is a pretty big piece ...)",FALSE,TRUE,75,119,330,5,FALSE,TRUE,TRUE,TRUE,0,120
alexcrichton,"I hadn't heard of the compiler @petrochenkov mentioned, but sounds plausible! I'm slightly wary of switching to a semi-random compiler to compile all our builds, but we may not have many other options.",FALSE,TRUE,33,119,331,6,FALSE,TRUE,FALSE,TRUE,0,120
alexcrichton,"Finally, we can look again to ripping out threading support from LLVM. We don't want LLVM to spawn threads anyway, and I believe most synchronization primitives at least are implemented in the i686-pc-windows-gnu win32 toolchain. This is obviously the most distasteful approach though.",FALSE,TRUE,43,119,333,8,FALSE,TRUE,FALSE,TRUE,0,120
alexcrichton,"Mostly I'm up for anything here. My only real hard constraint is that we can't impact users of the i686-pc-windows-gnu toolchain (e.g. the binaries they generate), but other than that I think we can pick whatever works first.",FALSE,TRUE,38,119,334,9,FALSE,TRUE,FALSE,TRUE,0,120
TimNN,"The meganz/mingw-std-threads @petrochenkov Is the same thing I linked above -- basically just three headers, which provide thread, mutex and condition_variable. However LLVM uses other stuff as well, such as futures, async and packaged_task which are provided neither by mingw nor by these additional headers.",FALSE,TRUE,45,120,335,0,TRUE,TRUE,FALSE,TRUE,0,121
TimNN,"I did a quick check on the x86_64-pc-windows-gnu which was compiled by msys2/mingw, which is the pthread/seh version as far as I can tell: According to dependency walker, rustc has a transitive dependency on winpthread through librustc_llvm -> libstc++6 -> winpthreads. libstd and a program compiled by that toolchain seem to be winpthread free.",FALSE,TRUE,54,121,336,0,TRUE,TRUE,FALSE,TRUE,0,122
TimNN,"Edit: Note that this was without statically linking libstdc++ into llvm.",FALSE,TRUE,11,121,337,1,TRUE,TRUE,FALSE,TRUE,0,122
alexcrichton,"Ah so the x86_64-pc-windows-gnu unwinder is very different than the i686-pc-windows-gnu unwinder, so it may be worth double checking i686. If libstd binaries picked up a dependency on winpthreads my guess is it'd be through that (the unwinder)",FALSE,TRUE,38,122,338,0,FALSE,TRUE,FALSE,TRUE,0,123
TimNN,"Yeah, I don't think we can get around the pthread dependency on i686 easily, if at all. However I'm still happy that  we can probably get away with pthread/seh on x86_64-pc-windows-gnu.",FALSE,TRUE,32,123,339,0,TRUE,TRUE,FALSE,TRUE,0,124
TimNN,"Out of curiosity, do you have download / usage stats for the different windows versions of rust?",FALSE,TRUE,17,123,340,1,TRUE,TRUE,FALSE,TRUE,0,124
alexcrichton,"Ah yeah so FWIW I think moving to compiling the compiler with a pthread/seh toolchain on x86_64 should work just fine. We'll have to update some script somewhere to distribute the new dll but that's no different than distributing the libstdc++ dll we do today. I'm pretty confident this toolchain switch will not affect programs compiled by the compiler (the unwinder is implemented in Rust and kernel32.dll, not in the mingw libraries)",FALSE,TRUE,72,124,342,1,FALSE,TRUE,TRUE,TRUE,0,125
alexcrichton,"Unfortunately we don't have many usage stats :(",FALSE,TRUE,8,124,343,2,FALSE,TRUE,FALSE,TRUE,0,125
vadimcn,"-pc-windows-msvc targets depend on MSVC linker, so you need to have at least the MSVC Build Tools installed along with it.   I don't think we can kill  -pc-windows-gnu targets until we migrate to the lld linker or something.",FALSE,TRUE,41,125,345,1,FALSE,TRUE,FALSE,TRUE,0,126
jonathandturner,"@vadimcn - for sake of argument, since the VS tools are free, it seems they are roughly on par with the gnu tools in terms of being able to get and use them.  Since the access is the same, are there other advantages of the gnu tools?",FALSE,FALSE,48,126,347,1,FALSE,TRUE,FALSE,TRUE,0,127
vadimcn,"@jonathandturner: For one thing, you can install a complete -pc-windows-gnu toolchain with rustup, not so for -msvc.-gnu may also be needed when linking with c++ libraries that do not build with MSVC.",FALSE,TRUE,32,127,349,1,FALSE,TRUE,FALSE,TRUE,0,128
vadimcn,"So I tried building Rust with msys2's i686 mingw toolchain and it fails to link because of references to pthread functions from libgcc_eh.a.",FALSE,TRUE,23,128,350,0,FALSE,TRUE,FALSE,TRUE,0,129
JordiPolo,"Maybe open a question in some very visible blog or reddit or somewhere like that about if anyone is in fact using i686-pc-windows-gnu?",FALSE,FALSE,23,129,351,0,FALSE,FALSE,FALSE,TRUE,0,130
vadimcn,"I've managed to build the compiler with msys2's i686 mingw toolchain, but this required several manual steps.",FALSE,TRUE,17,130,352,0,FALSE,FALSE,FALSE,TRUE,0,131
vadimcn,"First of all, since gcc's unwinder depends on pthreads, we'll need to add println!( cargo:rustc-link-lib=pthread ); after this line.",FALSE,TRUE,17,130,353,1,FALSE,TRUE,FALSE,TRUE,0,131
vadimcn,"stage0 failed to build stage1 because it does not have the line above.  Setting RUSTC_FLAGS=-Clink-arg=-lpthread didn't seem to have any effect, so I fixed this by copying libgcc_eh.a and import libs from a nightly into stage0/lib/rustlib/i686-pc-windows-gnu/lib.",FALSE,TRUE,37,130,354,2,FALSE,TRUE,FALSE,TRUE,0,131
vadimcn,"Using the newly built stage1 toolchain I compiled a test program, and found out that it depends on winpthread1.dll :(Turns out gcc has both static and dynamic version of libpthread, and by default it prefers the dynamic one.   Fixed this by deleting libpthread.dll.a from msys/mingw32/i686-w64-mingw32/lib.",FALSE,TRUE,47,130,355,3,FALSE,TRUE,FALSE,TRUE,0,131
vadimcn,"After all that my test program compiled and did not depend on winpthread dll.Not sure how to fix 2. and 3. in rustbuild though...",FALSE,TRUE,24,130,356,4,FALSE,TRUE,FALSE,TRUE,0,131
TimNN,"@vadimcn: Awesome! I thought that something along the lines of 1) and 2) should be possible, thanks for figuring that out!",FALSE,TRUE,21,131,357,0,TRUE,TRUE,TRUE,TRUE,0,132
TimNN,"@alexcrichton: Does linking libpthread statically sound like an acceptable solution to you?",FALSE,TRUE,12,131,359,2,TRUE,TRUE,FALSE,TRUE,0,132
TimNN,"I can look into the necessary rustbuild changes and would open a separate PR for that.",FALSE,TRUE,16,131,360,3,TRUE,TRUE,FALSE,TRUE,0,132
TimNN,"Regarding the slowness you mentioned, @vadimcn: I'll assume we would need a fairly recent mingw toolchain to get that fix? Live Edit: Ah you mentioned in #28445 (comment) that this was fixed in 6.2.0, so I assume we'd just go and use 6.3.0?",FALSE,TRUE,43,131,361,4,TRUE,TRUE,FALSE,TRUE,0,132
TimNN,"@alexcrichton: Do we have any compatibility constraints, which mingw version we use?",FALSE,TRUE,12,131,363,6,TRUE,TRUE,FALSE,TRUE,0,132
vadimcn,"@TimNN: yes, the slowness seems to have been fixed.",FALSE,TRUE,9,132,364,0,FALSE,FALSE,FALSE,TRUE,0,133
vadimcn,"To make sure that ld selects the static version of libpthread we could use -Wl,-Bstatic hint, except that I don't think you can inject it from a build script.  We'd have to switch to #[link_args=...].",FALSE,TRUE,36,132,366,2,FALSE,TRUE,FALSE,TRUE,0,133
cuviper,"Build scripts can specifiy the  kind , with the same meaning as #[link] kind.  So you'd output:cargo:rustc-link-lib=static=pthread",FALSE,FALSE,17,133,367,0,FALSE,TRUE,FALSE,TRUE,0,134
alexcrichton,"Yeah upgrading to 6.3.0 should be totally fine and linking libpthread statically seems ok.",FALSE,TRUE,14,134,368,0,FALSE,FALSE,TRUE,TRUE,0,135
alexcrichton,"I, too, do not know how to deal with -Wl,-Bstatic. I unfortunately don't think we can use static=pthread like @cuviper mentioned as I think such a construction would cause the libstd to be incompatible with other non-6.3.0 toolchains. I wonder if maybe the static-nobundle type can be used in this case? I think technically gcc_eh should also be static-nobundle...",FALSE,TRUE,59,134,371,3,FALSE,TRUE,TRUE,TRUE,0,135
vadimcn,"I wonder if maybe the static-nobundle type can be used in this case? I think technically gcc_eh should also be static-nobundle...",FALSE,TRUE,21,135,373,1,FALSE,TRUE,TRUE,TRUE,0,136
vadimcn,"Yeah, sounds like another use case for static-nobundle!   I don't think we currently do static hinting for them though.",FALSE,TRUE,21,135,374,2,FALSE,TRUE,FALSE,TRUE,0,136
vadimcn,"Okay, I have a branch here that builds and passes tests (well, up until debug info tests) on msys's version of mingw.",FALSE,TRUE,22,136,375,0,FALSE,TRUE,FALSE,TRUE,0,137
vadimcn,"Depends on #40524 for kind=static-nobundle",FALSE,TRUE,5,136,376,1,FALSE,TRUE,FALSE,TRUE,0,137
alexcrichton,"@vadimcn so just to clarify, I think that patch will break compatibility with win32 toolchains, right?",FALSE,TRUE,16,137,378,1,FALSE,TRUE,FALSE,TRUE,0,138
vadimcn,"I think that patch will break compatibility with win32 toolchains, right?",FALSE,TRUE,11,138,380,1,FALSE,TRUE,FALSE,TRUE,0,139
vadimcn,"I don't think so: win32 toolchains still include libpthread, they just don't use in std.",FALSE,TRUE,15,138,382,3,FALSE,TRUE,FALSE,TRUE,0,139
alexcrichton,"Excellent! A+ from me",FALSE,TRUE,4,139,383,0,FALSE,TRUE,FALSE,TRUE,0,140
vadimcn,"@TimNN, do you want incorporate this into your PR, or should I submit it separately?",FALSE,TRUE,15,140,384,0,FALSE,TRUE,TRUE,TRUE,0,141
TimNN,"@vadimcn: I think it would be best to land this separately. This PR will still take a bit of time -- There're still some test failures on ARM and I haven't yet really tested on macOS (although I plan to do so this weekend).",FALSE,TRUE,44,141,385,0,TRUE,TRUE,FALSE,TRUE,0,142
TimNN,"Also I think both PR have a high potential to causes trouble on the bots, so landing things in small chunks would be preferable, I think.",FALSE,TRUE,26,141,386,1,TRUE,TRUE,FALSE,TRUE,0,142
arielb1,"If you are rebasing, remember to apply the fix in #40779 to your LLVM (or you'll get a test failure on ARM).",FALSE,TRUE,22,142,388,1,FALSE,TRUE,FALSE,TRUE,0,143
TimNN,"@arielb1: Thanks for the heads up, this was already on my mental todo list :)",FALSE,TRUE,15,143,389,0,TRUE,TRUE,FALSE,TRUE,0,144
TimNN,"I reported the PowerPC failure as https://bugs.llvm.org//show_bug.cgi?id=32485.",FALSE,TRUE,7,144,390,0,TRUE,TRUE,FALSE,TRUE,0,145
TimNN,"I have a tentative (but probably a bit too heavy-handed for inclusion in upstream LLVM) fix for the PowerPC failure at TimNN/llvm@aa34b2c, which simply disables the bad optimisation in more situations.",FALSE,TRUE,31,145,391,0,TRUE,TRUE,FALSE,TRUE,0,146
TimNN,"With that patch PowerPC completes successfully.",FALSE,TRUE,6,145,392,1,TRUE,TRUE,FALSE,TRUE,0,146
TimNN,"So, I also went back to the ARM failures:",FALSE,TRUE,9,146,393,0,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"To recap: compiler-rt got a few patches which added code specific for Thumb1. With those patches applied our builds were failing in strange ways.",FALSE,TRUE,24,146,394,1,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"I originally stated that our cross compiler had __ARM_ARCH_ISA_THUMB=2 defined, so those patches should not apply to us. Revisiting the issue I noticed that, due to us passing -march=armv6 to the compiler, it's actually using __ARM_ARCH_ISA_THUMB=1.",FALSE,TRUE,36,146,395,2,TRUE,TRUE,TRUE,TRUE,0,147
TimNN,"Thus my new fix is to patch gcc-rs to use -march=armv6t2.",FALSE,TRUE,11,146,396,3,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"This seems to fix the main problem on ARM and incidentally the jemalloc deadlock as well.",FALSE,TRUE,16,146,397,4,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"Still remaining are panic-runtime/abort.rs and run-pass/panic-runtime/abort-link-to-unwinding-crates.rs not terminating.",FALSE,TRUE,8,146,398,5,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"Should we adjust the configs in dist-arm-linux to also set CT_ARCH_ARCH=armv6t2?",FALSE,TRUE,11,146,401,8,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"Now the real questions:",FALSE,TRUE,4,146,402,9,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"Is that the  correct  fix?",FALSE,TRUE,5,146,403,10,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"Is it acceptable to upstream that patch to gcc-rs?",FALSE,TRUE,9,146,405,12,TRUE,TRUE,FALSE,TRUE,0,147
TimNN,"Or should we maybe try and compile just compiler-rt (and jemalloc?) with -march=armv6t2?",FALSE,TRUE,13,146,407,14,TRUE,TRUE,TRUE,TRUE,0,147
alexcrichton,"@TimNN I personally have no idea what the difference between armv6 and armv6t2 are, so I probably can't comment much to wheteher that's right or not. But hey if it makes things work it makes things work!",FALSE,TRUE,37,147,408,0,FALSE,TRUE,FALSE,TRUE,0,148
alexcrichton,"Adjusting dist-arm-linux is ok, although optional. It basically just affects how we compile jemalloc which isn't too too important if it's a little slower than it would be otherwise.",FALSE,TRUE,29,147,409,1,FALSE,TRUE,FALSE,TRUE,0,148
alexcrichton,"The powerpc patch also seems ok to me, but it'd be great if an LLVM dev could say  yeah seems fine  before we throw it in (it's good that we have an issue to track upstream as well)",FALSE,TRUE,38,147,410,2,FALSE,TRUE,FALSE,TRUE,0,148
TimNN,"I'm currently debugging the panic-runtime/abort.rs hang: As previously stated it only occurs when RUST_BACKTRACE=1, it gets until _Unwind_Backtrace, where it apparently ends up in some complex endless loop.",FALSE,TRUE,28,148,411,0,TRUE,TRUE,FALSE,TRUE,0,149
TimNN,"As best as I can tell, our trace_fn is called repeated, with the exact same values in the registers and on the stack around $sp.",FALSE,TRUE,25,148,412,1,TRUE,TRUE,FALSE,TRUE,0,149
TimNN,"I have no idea what could be going on. There is a supposedly fixed gcc bug from 2014 which describes somewhat the same symptoms.",FALSE,TRUE,24,148,413,2,TRUE,TRUE,FALSE,TRUE,0,149
TimNN,"If someone wants to take a look, here is a link to the compiled abort test: https://transfer.sh/YJdCY/abort",FALSE,TRUE,17,148,414,3,TRUE,TRUE,FALSE,TRUE,0,149
TimNN,"Run with RUST_BACKTRACE=1 and foo as an argument and you should have an endlessly running program.",FALSE,TRUE,16,148,415,4,TRUE,TRUE,TRUE,TRUE,0,149
TimNN,"Hint: If gdb shows a broken backtrace (eg. only to entries in gcc_s.so) do stepi until you're out of gcc_s.so.",FALSE,TRUE,20,148,416,5,TRUE,TRUE,FALSE,TRUE,0,149
alexcrichton,"@TimNN I wonder if that's related to the super ancient toolchain we're using?",FALSE,TRUE,13,149,417,0,FALSE,TRUE,FALSE,TRUE,0,150
alexcrichton,"(or is that the other image...)",FALSE,TRUE,6,149,418,1,FALSE,FALSE,FALSE,TRUE,0,150
TimNN,"@alexcrichton: No, we're actually using a fairly recent toolchain in that image:",FALSE,TRUE,12,150,419,0,TRUE,TRUE,FALSE,TRUE,0,151
TimNN,"On my test raspberry I have gcc 5.2.1.",FALSE,TRUE,8,150,420,1,TRUE,TRUE,FALSE,TRUE,0,151
alexcrichton,"Bah that's a bummer.. If worse comes to worse I think we should disable that test. It's a non-tier 1 platform and it's holding up the LLVM upgrade, which probably isn't worth it.",FALSE,TRUE,33,151,421,0,FALSE,TRUE,TRUE,TRUE,0,152
alexcrichton,"(disable that test for arm, that is)",FALSE,TRUE,7,152,422,0,FALSE,FALSE,FALSE,TRUE,0,153
nagisa,"So, the Thumb2 thing is interesting, because sources seem to indicate it is a required extension in ARMv6, but then thereâ€™s no point in not having it enabled by default?",FALSE,TRUE,30,153,423,0,FALSE,TRUE,FALSE,TRUE,0,154
TimNN,"I just patched both of those tests to set RUST_BACKTRACE=0 for the sub command executed, and all other tests passed. So I would just set RUST_BACKTRACE=0 conditionally on the arm target.",FALSE,TRUE,31,154,424,0,TRUE,TRUE,FALSE,TRUE,0,155
alexcrichton,"@TimNN that seems like a reasonable workaround to me at least, yeah.",FALSE,TRUE,12,155,425,0,FALSE,FALSE,FALSE,TRUE,0,156
alexcrichton,"Note that if we take that route we should file an issue to track fixing it, but that's ok.",FALSE,TRUE,19,155,426,1,FALSE,TRUE,TRUE,TRUE,0,156
alexcrichton,"guh didn't mean to close",FALSE,TRUE,5,156,427,0,FALSE,FALSE,FALSE,TRUE,0,157
TimNN,"So, it appears that the thumb 1 implementation of (at least) __udivsi3 is simply incorrect, it doesn't even pass compiler-rt's unittests when compiled with -march=arm.",FALSE,TRUE,25,157,428,0,TRUE,FALSE,FALSE,TRUE,0,158
TimNN,"With the -D__ARM_ARCH_ISA_THUMB=0 proposed by @nagisa in alexcrichton/gcc-rs#149 the compiler-rt unit tests pass as well, so I'll see what happens if I pass that to the compiler-rt build.",FALSE,TRUE,28,158,429,0,TRUE,TRUE,FALSE,TRUE,0,159
TimNN,"I reported the bad Thumb1 builtin as https://bugs.llvm.org/show_bug.cgi?id=32492",FALSE,TRUE,8,159,430,0,TRUE,TRUE,FALSE,TRUE,0,160
TimNN,"I've switched to a different fix for the ARM builtin failures: manually defining __ARM_ARCH_ISA_THUMB=0 in the compiler-rt build script, as suggested in alexcrichton/gcc-rs#149.",FALSE,TRUE,23,160,431,0,TRUE,TRUE,FALSE,TRUE,0,161
TimNN,"Note that this does not fix the panic-runtime/abort* failures, so extra path for them is still required.",FALSE,TRUE,17,160,432,1,TRUE,TRUE,FALSE,TRUE,0,161
TimNN,"Since the linux builds seem to be done now (except for emscripten, I'll try to report that bug upstream this week) I've been looking into macOS today:",FALSE,TRUE,27,161,433,0,TRUE,TRUE,FALSE,TRUE,0,162
TimNN,"Except for one debuginfo test, everything passes!",FALSE,TRUE,7,161,434,1,TRUE,TRUE,FALSE,TRUE,0,162
TimNN,"The failing test is cross-crates-span.rs: The same generic function (from another crate) is called with different type parameters. The test sets a breakpoint in that function. The breakpoint in one of the instantiations of the generic function is not hit (I've experimented with different combinations).",FALSE,TRUE,45,161,435,2,TRUE,TRUE,FALSE,TRUE,0,162
TimNN,"I'll continue looking into that, though if anyone has any insights, please let me know.",FALSE,TRUE,15,161,436,3,TRUE,TRUE,FALSE,TRUE,0,162
TimNN,"So, well, I checked, and cross-crates-span.rs fails for me with LLVM 3.9 as well, so I guess that's good news and I'll just assume it will pass on the bots.",FALSE,TRUE,30,162,437,0,TRUE,TRUE,FALSE,TRUE,0,163
TimNN,"The iOS build was successful as well, which means we should be getting pretty close to getting this merged.",FALSE,TRUE,19,162,438,1,TRUE,TRUE,TRUE,TRUE,0,163
TimNN,"This means I will be looking into Windows again next.",FALSE,TRUE,10,162,439,2,TRUE,TRUE,FALSE,TRUE,0,163
alexcrichton,"Thanks for the updates @TimNN! If you're feeling like this is getting close we can try throwing this at @bors.",FALSE,TRUE,20,163,440,0,FALSE,TRUE,FALSE,TRUE,0,164
bors,"ðŸ”’ Merge conflict",FALSE,TRUE,3,164,441,0,FALSE,TRUE,FALSE,TRUE,0,165
TimNN,"I reported the emscripten failure upstream with a minimised testcase: kripken/emscripten-fastcomp#176",FALSE,TRUE,11,165,442,0,TRUE,FALSE,FALSE,TRUE,0,166
pnkfelix,"(FYI it is thought that landing this PR will fix #39015 . I mention this mostly so that this PR's status will show up on that ticket. ;)",FALSE,FALSE,28,166,443,0,FALSE,TRUE,FALSE,TRUE,0,167
TimNN,"So just FYI, the test thats failing with emscripten & LLVM 4.0 actually fails as well on master when emscripten is compiled with debug assertions...",FALSE,TRUE,25,167,444,0,TRUE,TRUE,FALSE,TRUE,0,168
TimNN,"On the other hand, I think I've found the problem and a fix!",FALSE,TRUE,13,167,445,1,TRUE,TRUE,FALSE,TRUE,0,168
TimNN,"Update: Fix submitted at kripken/emscripten-fastcomp#177",FALSE,TRUE,5,167,446,2,TRUE,TRUE,FALSE,TRUE,0,168
TimNN,"I've also submitted my initial patch for the PowerPC assertion to upstream llvm (D31790) and got some feedback on a better, more targeted fix. I'll switch to that once the review is done.",FALSE,TRUE,33,168,447,0,TRUE,TRUE,FALSE,TRUE,0,169
cuviper,"It seems like you're getting really close!",FALSE,TRUE,7,169,448,0,FALSE,FALSE,FALSE,TRUE,0,170
cuviper,"Do you think this will be ready before 1.18 branches?",FALSE,TRUE,10,169,449,1,FALSE,TRUE,FALSE,TRUE,0,170
TimNN,"So unless something has regressed, the only thing that requires more work is windows-gnu and I'll be working on that over the weekend so this PR will hopefully be ready by the end of next week at the latest. Which means it should be in time for 1.18.",FALSE,TRUE,48,170,450,0,TRUE,TRUE,TRUE,TRUE,0,171
TimNN,"The only thing that I can imagine delaying this PR to 1.19 is a deliberate decision to merge this after 1.18 has branched to have the full six weeks of nightlies to find any regressions.",FALSE,TRUE,35,170,451,1,TRUE,TRUE,FALSE,TRUE,0,171
TimNN,"Lets make use of the empty queue:",FALSE,TRUE,7,171,452,0,TRUE,FALSE,FALSE,TRUE,0,172
TimNN,"Edit: Apparently @b_ors try isn't really functional here",FALSE,TRUE,8,171,453,1,TRUE,TRUE,FALSE,TRUE,0,172
bors,"âŒ›ï¸? Trying commit 17e01d3 with merge 1781be5...",FALSE,TRUE,7,172,454,0,FALSE,TRUE,FALSE,TRUE,0,173
TimNN,"Well... windows-gnu is proving to be terribly uncooperative.",FALSE,TRUE,8,173,455,0,TRUE,FALSE,FALSE,TRUE,0,174
TimNN,"As expected MinGW with Win32 threads doesn't work since it doesn't provide std::thread (c++). MinGW with Posix threads required some additional, manual linking of libpthread and libgcc_s (despite #40805) and now causes undefined reference to LLVMRustSetLLVMOptions, rustc_llvm::initialize_available_targets::hdba7e30f03a6524a with MinGW64. On MinGW32 llvm-tblgen.exe crashes...",FALSE,TRUE,43,173,456,1,TRUE,TRUE,FALSE,TRUE,0,174
TimNN,"This led me to ask the question: Why do we even compile rustc with MinGW? Wouldn't std be enough? Thus I opened #41165 to discuss just that.",FALSE,TRUE,27,173,458,3,TRUE,TRUE,FALSE,TRUE,0,174
TimNN,"On another note, while the emscripten assertion has been fixed, the test still fails... I'll investigate a bit, but if nothing jumps out I'm inclined to just ignore the test for emscripten (at least for now).",FALSE,TRUE,36,173,459,4,TRUE,TRUE,FALSE,TRUE,0,174
alexcrichton,"@TimNN feel free to throw this at @bors if we've got an empty queue, we can at least test out and see how far it gets.",FALSE,TRUE,26,174,460,0,FALSE,FALSE,FALSE,TRUE,0,175
alexcrichton,"I'll comment on the reference issue about MinGW. tl;dr; we should try really hard to get it working as-is.",FALSE,TRUE,19,174,461,1,FALSE,TRUE,TRUE,TRUE,0,175
bors,"ðŸ’¥ Test timed out",FALSE,TRUE,4,175,462,0,FALSE,TRUE,FALSE,TRUE,0,176
TimNN,"@alexcrichton: Does  working as-is  mean staying with Win32 Threads or does that include switching to pthread?",FALSE,TRUE,16,176,464,1,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"@vadimcn: I'm having trouble building my llvm40 branch (which has your patch applied) with MinGW with  Posix threads:",FALSE,TRUE,19,176,465,2,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"Linking rustllvm complains about missing pthread / tls symbols, though this can be fixed by adding cargo:rustc-link-lib={gcc_s,pthread} (also tried with static and static-nobundle)",FALSE,TRUE,23,176,466,3,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"Linking rustc complains about missing symbols (if the above is fixed):",FALSE,TRUE,11,176,467,4,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"Do you have any ideas?",FALSE,TRUE,5,176,468,5,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"For the record, I have configured rustc with: configure --enable-extended --enable-ninja --disable-manage-submodules --enable-locked-deps --enable-cargo-openssl-static --enable-llvm-static-stdcpp --enable-debug-assertions --enable-llvm-assertions --build=x86_64-pc-windows-gnu",FALSE,TRUE,18,176,469,6,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"(@alexcrichton: I don't think throwing at bors is useful yet, since the windows-gnu build fail fairly quickly, so all the other builds would be canceled)",FALSE,TRUE,25,176,471,8,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"Although I guess trying wouldn't hurt.",FALSE,TRUE,6,176,472,9,TRUE,TRUE,FALSE,TRUE,0,177
TimNN,"@bors r+",FALSE,TRUE,2,176,473,10,TRUE,FALSE,FALSE,TRUE,0,177
bors,"ðŸ“‹ Looks like this PR is still in progress, ignoring approval",FALSE,TRUE,11,177,474,0,FALSE,TRUE,FALSE,TRUE,0,178
TimNN,"@bors retry force",FALSE,TRUE,3,178,475,0,TRUE,FALSE,FALSE,TRUE,0,179
bors,"ðŸ“‹ Looks like this PR is still in progress, ignoring approval",FALSE,TRUE,11,179,476,0,FALSE,TRUE,FALSE,TRUE,0,180
bors,"ðŸ“‹ Looks like this PR is still in progress, ignoring approval",FALSE,TRUE,11,180,477,0,FALSE,TRUE,FALSE,TRUE,0,181
TimNN,"@bors r+",FALSE,TRUE,2,181,478,0,TRUE,FALSE,FALSE,TRUE,0,182
bors,"ðŸ“‹ Looks like this PR is still in progress, ignoring approval",FALSE,TRUE,11,182,479,0,FALSE,TRUE,FALSE,TRUE,0,183
cuviper,"Perhaps bors is deterred by WIP in the title?",FALSE,TRUE,9,183,480,0,FALSE,TRUE,FALSE,TRUE,0,184
petrochenkov,"Perhaps bors is deterred by WIP in the title?",FALSE,TRUE,9,184,481,0,FALSE,TRUE,FALSE,TRUE,0,185
TimNN,"Ugh. I thought this was somehow related to the 'try', which previously bors thought had timed out.",FALSE,TRUE,17,185,483,0,TRUE,TRUE,FALSE,TRUE,0,186
TimNN,"Thanks for the heads up!",FALSE,TRUE,5,185,484,1,TRUE,TRUE,FALSE,TRUE,0,186
vadimcn,"@TimNN: I've managed to build at least stage1, though with current LLVM snapshot not with your branch.Also, I used cargobuild (i.e. configured it via config.toml), not configure.",FALSE,TRUE,27,186,485,0,FALSE,TRUE,FALSE,TRUE,0,187
vadimcn,"Did you use the toolchain packaged by msys2, or a standalone one (e.g. from mingw-builds)?Did you rebuild LLVM?",FALSE,TRUE,18,186,487,2,FALSE,TRUE,FALSE,TRUE,0,187
TimNN,"@vadimcn: I'm using the mingw shipped with msys2.",FALSE,TRUE,8,187,489,1,TRUE,TRUE,FALSE,TRUE,0,188
TimNN,"I can build the current master just fine, the errors only occur on my branch.",FALSE,TRUE,15,187,490,2,TRUE,TRUE,FALSE,TRUE,0,188
TimNN,"Did you rebuild LLVM?",FALSE,TRUE,4,187,491,3,TRUE,TRUE,FALSE,TRUE,0,188
TimNN,"I started in a clean build directory, so I'd say that counts as a yes.",FALSE,TRUE,15,187,492,4,TRUE,TRUE,FALSE,TRUE,0,188
TimNN,"@vadimcn: BTW, the only potentially important thing in that configure line is probably --enable-llvm-static-stdcpp, although again, that works just fine on rust master.",FALSE,TRUE,23,188,493,0,TRUE,TRUE,FALSE,TRUE,0,189
vadimcn,"@TimNN: are you saying that the only combination that doesn't work is pthreads mingw + your branch?",FALSE,TRUE,17,189,495,1,FALSE,FALSE,FALSE,TRUE,0,190
TimNN,"master + MingGW Win32 Threads: Presumably works",FALSE,TRUE,7,190,497,1,TRUE,TRUE,FALSE,TRUE,0,191
TimNN,"master + Msys2 MinGW (Posix Threads): Works",FALSE,TRUE,7,190,498,2,TRUE,TRUE,FALSE,TRUE,0,191
TimNN,"llvm40 + MinGW Win32 Threads: Doesn't work (missing std::thread (c++) support",FALSE,TRUE,11,190,499,3,TRUE,TRUE,FALSE,TRUE,0,191
TimNN,"llvm40 + Msys2 MinGW (Posix Threads): Doesn't work (see errors above)",FALSE,TRUE,11,190,500,4,TRUE,TRUE,FALSE,TRUE,0,191
vadimcn,"I've repro'd the linker error. This is very strange - these 4 symbols are exported from rustc_llvm-XXXXXXX.dll",FALSE,TRUE,17,191,501,0,FALSE,TRUE,FALSE,TRUE,0,192
vadimcn,"these 4 symbols are exported from rustc_llvm-XXXXXXX.dll",FALSE,TRUE,7,192,502,0,FALSE,FALSE,FALSE,TRUE,0,193
vadimcn,"Actually, it seems that I was wrong abut that.  After rebuilding everything from scratch, I found that rustc_llvm-XXXXXXX.dll exported only a handful of symbols, all of them from emscripten's  Relooper  library (e.g. rl_new_relooper).",FALSE,TRUE,34,192,503,1,FALSE,TRUE,FALSE,TRUE,0,193
vadimcn,"Why had this happened?  This page gives the answer:",FALSE,TRUE,10,192,504,2,FALSE,TRUE,FALSE,TRUE,0,193
vadimcn,"By default ld exports symbols with the auto-export functionality,[...]If, however, -export-all-symbols is not given explicitly on the command line, then the default auto-export behavior will be disabled if either of the following are true:",FALSE,TRUE,34,192,505,3,FALSE,TRUE,FALSE,TRUE,0,193
vadimcn,"A DEF file is used.",FALSE,TRUE,5,192,506,4,FALSE,TRUE,FALSE,TRUE,0,193
vadimcn,"Any symbol in any object file was marked with the __declspec(dllexport) attribute.",FALSE,TRUE,12,192,507,5,FALSE,TRUE,FALSE,TRUE,0,193
vadimcn,"As it happens, Relooper's public API is marked with __declspec(dllexport) and so all other symbols become private.I found it a bit hard to believe that this is the first time we are coming across this case, but setting RUSTFLAGS=-CLink-arg=-Wl,--export-all-symbols did fix the build.",FALSE,TRUE,43,192,508,6,FALSE,TRUE,FALSE,TRUE,0,193
TimNN,"@vadimcn: Awesome, thanks for the investigation!",FALSE,TRUE,6,193,509,0,TRUE,TRUE,FALSE,TRUE,0,194
TimNN,"So how do we best fix this?",FALSE,TRUE,7,194,510,0,TRUE,FALSE,FALSE,TRUE,0,195
TimNN,"With my admittedly limited understanding of the situation, we have multiple choices, I think:",FALSE,TRUE,14,194,511,1,TRUE,TRUE,FALSE,TRUE,0,195
TimNN,"Fix this for rustbuild only:",FALSE,TRUE,5,194,512,2,TRUE,TRUE,FALSE,TRUE,0,195
TimNN,"Use RUSTFLAGSUpdate cargo to support adding -Clink-arg=... from the build script of rustc_llvmHack something together with #[link_args=...] and features set in the build script of rustc_llvm",FALSE,TRUE,26,194,513,3,TRUE,TRUE,FALSE,TRUE,0,195
TimNN,"Fix this in rustc:",FALSE,TRUE,4,194,514,4,TRUE,TRUE,FALSE,TRUE,0,195
TimNN,"on mingw, always pass --export-all-symbols",FALSE,TRUE,5,194,515,5,TRUE,FALSE,FALSE,TRUE,0,195
TimNN,"cc @alexcrichton, @retep998",FALSE,TRUE,3,194,516,6,TRUE,FALSE,FALSE,TRUE,0,195
retep998,"@TimNN What we should be doing is using an explicit DEF file or linker script for dylibs, the way we currently do for cdylibs on all platforms, and dylibs for msvc.",FALSE,TRUE,31,195,518,1,FALSE,TRUE,TRUE,TRUE,0,196
alexcrichton,"Spoke briefly with @TimNN on IRC about this. First off awesome find @vadimcn, that sounds notoriously hard to track down!",FALSE,TRUE,20,196,519,0,FALSE,TRUE,FALSE,TRUE,0,197
alexcrichton,"Looks like the dllexport may be coming from the LLVM source itself, so @TimNN is going to run a test where we just comment that out in our forked version of LLVM and see if it work.",FALSE,TRUE,37,196,520,1,FALSE,TRUE,FALSE,TRUE,0,197
vadimcn,"Removing dllexports from relooper symbols would be the quickest fix in this case.",FALSE,TRUE,13,197,522,1,FALSE,TRUE,FALSE,TRUE,0,198
vadimcn,"To fix it robustly, we should either start passing --export-all-symbols when linking Rust dylibs, or provide an explicit list of exports as @retep998 suggests.In either case well need a separate fix for stage0.  #[link_args( -Wl,--export-all-symbols )] in rustc_llvm would probably work.",FALSE,TRUE,40,197,524,3,FALSE,TRUE,TRUE,TRUE,0,198
alexcrichton,"I would prefer to avoid changing linker invocations in this PR itself, those have a high likelihood for causing breakage. Let's defer that to later if the removing dllexport fixes the issue.",FALSE,TRUE,32,198,526,1,FALSE,TRUE,FALSE,TRUE,0,199
TimNN,"@bors r+",FALSE,TRUE,2,199,527,0,TRUE,FALSE,FALSE,TRUE,0,200
TimNN,"Lets see what the bots say, (this includes an exit 1) to deliberately fail the build.",FALSE,TRUE,16,199,528,1,TRUE,TRUE,FALSE,TRUE,0,200
bors,"ðŸ“Œ Commit f0b2b7b has been approved by TimNN",FALSE,TRUE,8,200,529,0,FALSE,TRUE,FALSE,TRUE,0,201
bors,"âŒ›ï¸? Testing commit f0b2b7b with merge 54e8328...",FALSE,TRUE,7,201,530,0,FALSE,TRUE,FALSE,TRUE,0,202
bors,"ðŸ’” Test failed - status-appveyor",FALSE,TRUE,5,202,531,0,FALSE,TRUE,FALSE,TRUE,0,203
TimNN,"Appveyor fails with this:",FALSE,TRUE,4,203,532,0,TRUE,FALSE,FALSE,TRUE,0,204
TimNN,"If I remember correctly, I've encountered this previously when using a 32bit MinGW from sourceforge. I'll see if I can reproduce this again.",FALSE,TRUE,23,203,533,1,TRUE,TRUE,FALSE,TRUE,0,204
TimNN,"I couldn't reproduce the tablegen failure locally, however appveyor seems to fail consistently (I tried different mingw versions as well):",FALSE,TRUE,20,204,534,0,TRUE,FALSE,FALSE,TRUE,0,205
TimNN,"I had the .dmp file uploaded to https://transfer.sh/x9pLn/foo.dmp,",FALSE,TRUE,8,204,536,2,TRUE,TRUE,FALSE,TRUE,0,205
TimNN,"I uploaded that dump file to http://www.osronline.com/page.cfm?name=analyze, however the only useful thing I could gleam from the output was that it was apparently caused by a null pointer.",FALSE,TRUE,28,204,537,3,TRUE,TRUE,FALSE,TRUE,0,205
TimNN,"At this point I'm kinda out of ideas, anyone any thoughts?",FALSE,TRUE,11,204,538,4,TRUE,TRUE,FALSE,TRUE,0,205
ranma42,"That looks similar to http://lists.llvm.org/pipermail/cfe-dev/2016-December/051980.html (i.e. it might be caused by a miscompilation).",FALSE,FALSE,13,205,539,0,FALSE,FALSE,FALSE,TRUE,0,206
TimNN,"@ranma42: Nice find! I'll try the suggested workaround (compile with -fno-omit-frame-pointer) soon.",FALSE,TRUE,12,206,540,0,TRUE,TRUE,FALSE,TRUE,0,207
TimNN,"Lets give this anothet try, since my test build has passed the critical point.",FALSE,TRUE,14,207,541,0,TRUE,FALSE,FALSE,TRUE,0,208
TimNN,"@bors r+",FALSE,TRUE,2,207,542,1,TRUE,FALSE,FALSE,TRUE,0,208
bors,"ðŸ“Œ Commit ce1be7a has been approved by TimNN",FALSE,TRUE,8,208,543,0,FALSE,TRUE,FALSE,TRUE,0,209
bors,"âŒ›ï¸? Testing commit ce1be7a with merge 23806c7...",FALSE,TRUE,7,209,544,0,FALSE,TRUE,FALSE,TRUE,0,210
bors,"ðŸ’” Test failed - status-appveyor",FALSE,TRUE,5,210,545,0,FALSE,TRUE,FALSE,TRUE,0,211
TimNN,"Ugh. I think I lost a small patch during a rebase, I'll fix that once I'm back at a computer.",FALSE,TRUE,20,211,546,0,TRUE,TRUE,FALSE,TRUE,0,212
TimNN,"@bors r+",FALSE,TRUE,2,212,547,0,TRUE,FALSE,FALSE,TRUE,0,213
bors,"ðŸ“Œ Commit 5a4475c has been approved by TimNN",FALSE,TRUE,8,213,548,0,FALSE,TRUE,FALSE,TRUE,0,214
bors,"âŒ›ï¸? Testing commit 5a4475c with merge 00d3310...",FALSE,TRUE,7,214,549,0,FALSE,TRUE,FALSE,TRUE,0,215
bors,"ðŸ’” Test failed - status-travis",FALSE,TRUE,5,215,550,0,FALSE,TRUE,FALSE,TRUE,0,216
bors,"-ManishOn Mon, Apr 17, 2017 at 8:34 PM, bors ***@***.***> wrote:ðŸ’” Test failed - status-travis<https://travis-ci.org/rust-lang/rust/builds/222763352>",FALSE,TRUE,15,215,554,4,FALSE,TRUE,FALSE,TRUE,0,216
bors,"â€”You are receiving this because you are subscribed to this thread.Reply to this email directly, view it on GitHub<#40123 (comment)>, or mutethe thread<https://github.com/notifications/unsubscribe-auth/AaPN0Kuy9f0sbrekekYDjuG1eNDbXt1_ks5rw1xQgaJpZM4MNOAe>.",FALSE,TRUE,23,215,555,5,FALSE,TRUE,FALSE,TRUE,0,216
arielb1,"#40417 (not sure)",FALSE,TRUE,3,216,556,0,FALSE,FALSE,FALSE,TRUE,0,217
arielb1,"let's see: @bors retry",FALSE,TRUE,4,216,557,1,FALSE,FALSE,FALSE,TRUE,0,217
bors,"âŒ›ï¸? Testing commit 5a4475c with merge 89bf584...",FALSE,TRUE,7,217,558,0,FALSE,TRUE,FALSE,TRUE,0,218
arielb1,"@bors r+",FALSE,TRUE,2,218,559,0,FALSE,FALSE,FALSE,TRUE,0,219
bors,"ðŸ“Œ Commit 469755e has been approved by arielb1",FALSE,TRUE,8,219,560,0,FALSE,TRUE,FALSE,TRUE,0,220
arielb1,"@bors retry",FALSE,TRUE,2,220,561,0,FALSE,FALSE,FALSE,TRUE,0,221
bors,"âŒ›ï¸? Testing commit 469755e with merge 5e19fd3...",FALSE,TRUE,7,221,562,0,FALSE,TRUE,FALSE,TRUE,0,222
TimNN,"@alexcrichton: I went through all the merged PRs newer than rust-lang/llvm#34 and cherry-picked those not in my branch except rust-lang/llvm#68 (that hasn't landed on rust-lang/master yet) and rust-lang/llvm#37 (that had merge conflicts and I wasn't sure how applicable it still was).",FALSE,TRUE,41,222,563,0,TRUE,TRUE,FALSE,TRUE,0,223
TimNN,"If those don't cause any problems with bors I think this is good to go, but I'll leave the final r+ to you.",FALSE,TRUE,23,222,564,1,TRUE,TRUE,FALSE,TRUE,0,223
TimNN,"(Grrr. I wasn't done yet GitHub)",FALSE,TRUE,6,223,565,0,TRUE,TRUE,FALSE,TRUE,0,224
TimNN,"One open question remains: Given that the next beta is cut in 11 days, should we postpone merging this until after the beta (to give more time to find and fix any regressions)?",FALSE,TRUE,33,223,566,1,TRUE,TRUE,TRUE,TRUE,0,224
TimNN,"NB: this PR currently still includes a deliberate failure to allow running tests without actually merging it.",FALSE,TRUE,17,223,567,2,TRUE,TRUE,FALSE,TRUE,0,224
bors,"ðŸ’” Test failed - status-travis",FALSE,TRUE,5,224,568,0,FALSE,TRUE,FALSE,TRUE,0,225
TimNN,"@bors retry",FALSE,TRUE,2,225,569,0,TRUE,FALSE,FALSE,TRUE,0,226
bors,"âŒ›ï¸? Testing commit 469755e with merge a32a973...",FALSE,TRUE,7,226,570,0,FALSE,TRUE,FALSE,TRUE,0,227
bors,"ðŸ’” Test failed - status-travis",FALSE,TRUE,5,227,571,0,FALSE,TRUE,FALSE,TRUE,0,228
arielb1,"@bors r+",FALSE,TRUE,2,229,572,0,FALSE,FALSE,FALSE,TRUE,0,230
bors,"ðŸ“Œ Commit af12199 has been approved by arielb1",FALSE,TRUE,8,230,573,0,FALSE,TRUE,FALSE,TRUE,0,231
bors,"âŒ›ï¸? Testing commit af12199 with merge 0470cbf...",FALSE,TRUE,7,231,574,0,FALSE,TRUE,FALSE,TRUE,0,232
bors,"ðŸ’” Test failed - status-appveyor",FALSE,TRUE,5,232,575,0,FALSE,TRUE,FALSE,TRUE,0,233
TimNN,"Things are looking good, I'd say: The first appveyor bot (64bit MinGW deploy) ran succesfully (and hit the exit 1 I put a the and, which cancelled the other bots).",FALSE,TRUE,30,233,576,0,TRUE,TRUE,FALSE,TRUE,0,234
TimNN,"Should we try again with finish-fast set to false in appveyor.yml?",FALSE,TRUE,11,233,577,1,TRUE,TRUE,FALSE,TRUE,0,234
arielb1,"You can add a echo YAY; sleep 10000 to get results on all the bots.",FALSE,TRUE,15,234,579,1,FALSE,TRUE,FALSE,TRUE,0,235
TimNN,"@arielb1: Good idea, I hadn't though of that (although we probably want to do that in a loop so the builds aren't canceled from a lack of output)",FALSE,TRUE,28,235,580,0,TRUE,TRUE,FALSE,TRUE,0,236
TimNN,"@bors r+",FALSE,TRUE,2,236,581,0,TRUE,FALSE,FALSE,TRUE,0,237
TimNN,"Lets test this again, this time with an infinite sleep loop at the end so that tests aren't prematurely canceled.",FALSE,TRUE,20,236,582,1,TRUE,TRUE,FALSE,TRUE,0,237
bors,"ðŸ“Œ Commit 20926e5 has been approved by TimNN",FALSE,TRUE,8,237,583,0,FALSE,TRUE,FALSE,TRUE,0,238
alexcrichton,"Looking great as usual @TimNN, thanks so much for sticking with this!",FALSE,TRUE,12,238,584,0,FALSE,FALSE,FALSE,TRUE,0,239
alexcrichton,"A few requests for the LLVM submodule:",FALSE,TRUE,7,238,585,1,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"Could you expand the commit message for rust-lang/llvm@4275d89?",FALSE,TRUE,8,238,586,2,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"Could you mention the breakage seen in rust-lang/llvm@20acd70? (notably @vadimcn's comment, or a link to that would be great)",FALSE,TRUE,19,238,587,3,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"Could you remove the PR merge commits? (should be ok to just cherry-pick the actual commits)",FALSE,TRUE,16,238,588,4,FALSE,TRUE,TRUE,TRUE,0,239
alexcrichton,"Dropping the jemalloc bits should be fine, I'm dubious that optimization ever kicked in anyway.",FALSE,TRUE,15,238,589,5,FALSE,TRUE,TRUE,TRUE,0,239
alexcrichton,"I'd also idly muse that there's no real reason to use the literal release_40 branch. We could reduce the stack of patches by a lot I think by just using LLVM tip (as of like right now). I think that'd cause problems with emscripten though, right? (different merge bases) It seems like we should also stick with the current merge base as you've already done all the testing. You should mostly disregard this paragraph.",FALSE,TRUE,74,238,591,7,FALSE,TRUE,TRUE,TRUE,0,239
alexcrichton,"The compiler-rt submodule looks a little suspicious though, so I just wanted to confirm. I think the following PRs are missing from the rust-2017-04-13, was that intentional? (I don't recall upstreaming many of these...)",FALSE,TRUE,34,238,592,8,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"rust-lang/compiler-rt#24 - UB with INT_MIN in an intrinsic",FALSE,TRUE,8,238,593,9,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"rust-lang/compiler-rt#26 - was this fixed upstream in LLVM, right?",FALSE,TRUE,9,238,594,10,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"rust-lang/compiler-rt#27 - infinite recursion on FreeBSD in an intrinsic",FALSE,TRUE,9,238,595,11,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"rust-lang/compiler-rt#28 - fixing rust-lang/compiler-rt#27 I think?",FALSE,TRUE,6,238,596,12,FALSE,TRUE,FALSE,TRUE,0,239
alexcrichton,"rust-lang/compiler-rt#31 - more mystery on sparc?",FALSE,TRUE,6,238,597,13,FALSE,FALSE,FALSE,TRUE,0,239
alexcrichton,"One open question remains: Given that the next beta is cut in 11 days, should we postpone merging this until after the beta (to give more time to find and fix any regressions)?",FALSE,TRUE,33,238,598,14,FALSE,TRUE,TRUE,TRUE,0,239
alexcrichton,"Yeah if you're ok with it I'd prefer to stay conservative here and wait until after beta is branched (should happen late next week) before merging this. This looks like it's got a lot of potential for accidental regressions!",FALSE,TRUE,39,238,599,15,FALSE,TRUE,TRUE,TRUE,0,239
alexcrichton,"Although it may be good to at some point categorize the number of bugs this (the upgrade to LLVM 4.0) fixes. If it fixes enough bugs we may wish to land it for beta and deal with the backports.",FALSE,TRUE,39,238,600,16,FALSE,TRUE,FALSE,TRUE,0,239
TimNN,"Could you expand the commit message for rust-lang/llvm@4275d89?",FALSE,TRUE,8,239,601,0,TRUE,FALSE,FALSE,TRUE,0,240
TimNN,"Sure (this has also been upstreamed to emscripten).",FALSE,TRUE,8,239,602,1,TRUE,TRUE,FALSE,TRUE,0,240
TimNN,"Could you mention the breakage seen in rust-lang/llvm@20acd70? (notably @vadimcn's comment, or a link to that would be great)",FALSE,TRUE,19,239,603,2,TRUE,TRUE,FALSE,TRUE,0,240
TimNN,"Of course. I'll add a link to @vadimcn's comment to the comment added in that commit.",FALSE,TRUE,16,239,604,3,TRUE,TRUE,FALSE,TRUE,0,240
TimNN,"Could you remove the PR merge commits? (should be ok to just cherry-pick the actual commits)",FALSE,TRUE,16,239,605,4,TRUE,TRUE,TRUE,TRUE,0,240
TimNN,"That's what I had originally when @arielb1 requested on IRC I use the merge commits so that the original PR number was linked from the cherry picks. Although I can easily go back to the non merge commit version.",FALSE,TRUE,39,239,606,5,TRUE,TRUE,FALSE,TRUE,0,240
TimNN,"The compiler-rt submodule looks a little suspicious though.",FALSE,TRUE,8,239,607,6,TRUE,TRUE,FALSE,TRUE,0,240
TimNN,"Ugh. Yeah, thanks for the reminder, I honestly didn't even look at compiler-rt submodule.",FALSE,TRUE,14,239,608,7,TRUE,TRUE,FALSE,TRUE,0,240
TimNN,"One open question remains: Given that the next beta is cut in 11 days, should we postpone merging this until after the beta (to give more time to find and fix any regressions)?",FALSE,TRUE,33,239,609,8,TRUE,TRUE,TRUE,TRUE,0,240
TimNN,"Yeah if you're ok with it I'd prefer to stay conservative here and wait until after beta is branched (should happen late next week) before merging this. This looks like it's got a lot of potential for accidental regressions!",FALSE,TRUE,39,239,610,9,TRUE,TRUE,TRUE,TRUE,0,240
TimNN,"Yeah I'm totally fine with postponing (the bitrot potential for this PR is luckily pretty low).",FALSE,TRUE,16,239,611,10,TRUE,TRUE,FALSE,TRUE,0,240
alexcrichton,"I use the merge commits so that the original PR number was linked from the cherry picks",FALSE,TRUE,17,240,612,0,FALSE,TRUE,FALSE,TRUE,0,241
alexcrichton,"That actually sounds very reasonable, let's leave as is.",FALSE,TRUE,9,240,613,1,FALSE,TRUE,FALSE,TRUE,0,241
frewsxcv,"@bors r+",FALSE,FALSE,2,241,614,0,FALSE,FALSE,FALSE,TRUE,0,242
frewsxcv,"Lets test this again, this time with an infinite sleep loop at the end so that tests aren't prematurely canceled.",FALSE,FALSE,20,241,615,1,FALSE,TRUE,FALSE,TRUE,0,242
frewsxcv,"Instead of holding up the queue, you could also just conditionally turn on whichever builders you want for this pull request by temporarily adding ALLOW_PR=1 here https://github.com/rust-lang/rust/blob/master/.travis.yml#L15-L49",FALSE,FALSE,27,241,616,2,FALSE,TRUE,FALSE,TRUE,0,242
bors,"ðŸ’¡ This pull request was already approved, no need to approve it again.",FALSE,TRUE,13,242,617,0,FALSE,TRUE,FALSE,TRUE,0,243
bors,"There's another pull request that is currently being tested, blocking this pull request: #41363",FALSE,TRUE,14,242,618,1,FALSE,TRUE,FALSE,TRUE,0,243
bors,"ðŸ“Œ Commit 20926e5 has been approved by frewsxcv",FALSE,TRUE,8,243,619,0,FALSE,TRUE,FALSE,TRUE,0,244
frewsxcv,"@bors r=TimNN",FALSE,FALSE,2,244,620,0,FALSE,FALSE,FALSE,TRUE,0,245
bors,"ðŸ’¡ This pull request was already approved, no need to approve it again.",FALSE,TRUE,13,245,621,0,FALSE,TRUE,FALSE,TRUE,0,246
bors,"There's another pull request that is currently being tested, blocking this pull request: #41363",FALSE,TRUE,14,245,622,1,FALSE,TRUE,FALSE,TRUE,0,246
bors,"ðŸ“Œ Commit 20926e5 has been approved by TimNN",FALSE,TRUE,8,246,623,0,FALSE,TRUE,FALSE,TRUE,0,247
TimNN,"@frewsxcv: Yeah, I know, but right now the most important bit is appveyor (and seeing if the latest llvm backports broke any of the other bots), so r+ is the best way to go here as far as I know.",FALSE,TRUE,40,247,624,0,TRUE,TRUE,FALSE,TRUE,0,248
bors,"âŒ›ï¸? Testing commit 20926e5 with merge 83059b5...",FALSE,TRUE,7,248,625,0,FALSE,TRUE,FALSE,TRUE,0,249
bors,"ðŸ’” Test failed - status-appveyor",FALSE,TRUE,5,249,626,0,FALSE,TRUE,FALSE,TRUE,0,250
arielb1,"@bors retry",FALSE,TRUE,2,250,628,1,FALSE,FALSE,FALSE,TRUE,0,251
bors,"âŒ›ï¸? Testing commit 20926e5 with merge 146430a...",FALSE,TRUE,7,251,629,0,FALSE,TRUE,FALSE,TRUE,0,252
bors,"ðŸ’” Test failed - status-appveyor",FALSE,TRUE,5,252,630,0,FALSE,TRUE,FALSE,TRUE,0,253
retep998,"That looks like a resounding success to me. Build died at exactly 3 hours when the timeout was hit.",FALSE,TRUE,19,253,631,0,FALSE,TRUE,FALSE,TRUE,0,254
TimNN,"That looks like a resounding success to me. Build died at exactly 3 hours when the timeout was hit.",FALSE,TRUE,19,254,632,0,TRUE,TRUE,FALSE,TRUE,0,255
TimNN,"Yay! I checked all the logs and they indeed show that all builds were successful ðŸŽ‰",FALSE,TRUE,16,254,633,1,TRUE,TRUE,FALSE,TRUE,0,255
TimNN,">>>Kixunil, ðŸ‘Ž1",FALSE,TRUE,2,254,634,2,TRUE,FALSE,FALSE,TRUE,0,255
TimNN,"@TimNN did someone hire you to do this or did you do it in your free time? If someone hired you, could you disclose your employer?",FALSE,TRUE,26,254,635,3,TRUE,TRUE,FALSE,TRUE,0,255
TimNN,"@Kixunil: Nope, not being payed for this. Just started it and stubbornly stuck with it.",FALSE,TRUE,15,255,636,0,TRUE,TRUE,FALSE,TRUE,0,256
Kixunil,"Awesome! Thank you very much! I look forward to being able to target AVR... :)",FALSE,TRUE,15,256,637,0,FALSE,TRUE,FALSE,TRUE,0,257
copumpkin,"This is great, thanks! As someone not familiar with LLVM release process, is there an ETA on when this will end up in a release?",FALSE,FALSE,25,257,638,0,FALSE,TRUE,FALSE,TRUE,0,258
TimNN,"I look forward to being able to target AVR.",FALSE,TRUE,9,258,639,0,TRUE,TRUE,FALSE,TRUE,0,259
TimNN,"Yeah, wanting to experiment with rust on ARM AVR (without having to build a custom compiler) was one the motivating factors in me starting this.",FALSE,TRUE,25,258,640,1,TRUE,TRUE,FALSE,TRUE,0,259
TimNN,"The current plans are as follows, as far as I am aware:",FALSE,TRUE,12,258,642,3,TRUE,TRUE,FALSE,TRUE,0,259
TimNN,"This will be available on nightly once the next beta has branched (in about a week) and then make its ways to beta in about 7 weeks and to stable in about three months.",FALSE,TRUE,34,258,643,4,TRUE,TRUE,FALSE,TRUE,0,259
alexcrichton,"@TimNN congratulations! That's awesome news that we've got green lights across the board (and warm sccache caches now).",FALSE,TRUE,18,259,644,0,FALSE,TRUE,FALSE,TRUE,0,260
alexcrichton,"Did you wanna take care of the last few compiler-rt patches? I don't mind taking care of them either if you've run out of time for this :)",FALSE,TRUE,28,259,645,1,FALSE,TRUE,FALSE,TRUE,0,260
TimNN,"@alexcrichton: I can take care of the compiler-rt patches, although probably not until this weekend, which I guess is fine given that we want to wait until after the beta has branched before we merge this.",FALSE,TRUE,36,260,646,0,TRUE,TRUE,FALSE,TRUE,0,261
TimNN,"If you want them done earlier I won't mind if you do them.",FALSE,TRUE,13,260,647,1,TRUE,TRUE,FALSE,TRUE,0,261
alexcrichton,"Nah sounds good to me!",FALSE,TRUE,5,261,648,0,FALSE,FALSE,FALSE,TRUE,0,262
mrhota,"@alexcrichton @TimNN what's this about compiler-rt patches? It seems like most work on this issue is happening in other repos, and perhaps on non-master branches, but there's nothing written down anywhere that I can see. Could y'all provide links or relevant information so we can see what work went into this issue?",FALSE,FALSE,52,262,649,0,FALSE,TRUE,FALSE,TRUE,0,263
alexcrichton,"@mrhota oh you can find the list of patches here: https://github.com/rust-lang/compiler-rt/commits/rust-llvm-2016-07-18",FALSE,TRUE,11,263,650,0,FALSE,FALSE,FALSE,TRUE,0,264
alexcrichton,"(note that's the branch corresponding to the commit of the compiler-rt submodule in the rust-lang/rust repo)",FALSE,TRUE,16,263,651,1,FALSE,FALSE,FALSE,TRUE,0,264
TimNN,"@alexcrichton: I think I incorporated all your feedback:",FALSE,TRUE,8,264,652,0,TRUE,TRUE,FALSE,TRUE,0,265
TimNN,"The to_string commit / backport is no longer necessary, since it's part of the new emscripten merge (see below)",FALSE,TRUE,19,264,654,2,TRUE,TRUE,FALSE,TRUE,0,265
TimNN,"I updated the comment regarding the dllexport",FALSE,TRUE,7,264,655,3,TRUE,TRUE,FALSE,TRUE,0,265
TimNN,"I pushed the five PR's mentioned to the compiler-rt branch (I also had a quick look over the others compiler-rt PR's and didn't find any others that seemed relevant and weren't upstreamed).",FALSE,TRUE,32,264,656,4,TRUE,TRUE,FALSE,TRUE,0,265
TimNN,"Since I had to rebase the LLVM submodule anyway to edit the commit message, I:",FALSE,TRUE,15,264,657,5,TRUE,TRUE,FALSE,TRUE,0,265
TimNN,"cleaned up the older LLVM submodule commits as well, so that every rust modification now has a merge commit with pull request number (with two old exceptions).",FALSE,TRUE,27,264,658,6,TRUE,TRUE,FALSE,TRUE,0,265
TimNN,"updated the llvm base to 4.0.1",FALSE,TRUE,6,264,659,7,TRUE,FALSE,FALSE,TRUE,0,265
TimNN,"update the fastcomp base to 1.37.10",FALSE,TRUE,6,264,660,8,TRUE,FALSE,FALSE,TRUE,0,265
TimNN,"The always fail is still active, so lets test this PR again:",FALSE,TRUE,12,264,661,9,TRUE,TRUE,FALSE,TRUE,0,265
TimNN,"@bors r+",FALSE,TRUE,2,264,662,10,TRUE,FALSE,FALSE,TRUE,0,265
bors,"ðŸ“Œ Commit 516d3a0 has been approved by TimNN",FALSE,TRUE,8,265,663,0,FALSE,TRUE,FALSE,TRUE,0,266
bors,"ðŸ’¡ This pull request was already approved, no need to approve it again.",FALSE,TRUE,13,266,664,0,FALSE,TRUE,FALSE,TRUE,0,267
bors,"There's another pull request that is currently being tested, blocking this pull request: #41485",FALSE,TRUE,14,266,665,1,FALSE,TRUE,FALSE,TRUE,0,267
bors,"ðŸ“Œ Commit 516d3a0 has been approved by TimNN",FALSE,TRUE,8,267,666,0,FALSE,TRUE,FALSE,TRUE,0,268
bors,"âŒ›ï¸? Testing commit 516d3a0 with merge f857be8...",FALSE,TRUE,7,268,667,0,FALSE,TRUE,FALSE,TRUE,0,269
bors,"ðŸ’” Test failed - status-appveyor",FALSE,TRUE,5,269,668,0,FALSE,TRUE,FALSE,TRUE,0,270
TimNN,"@bors retry",FALSE,TRUE,2,270,669,0,TRUE,FALSE,FALSE,TRUE,0,271
TimNN,"ar.exe failure",FALSE,TRUE,2,270,670,1,TRUE,FALSE,FALSE,TRUE,0,271
bors,"âŒ›ï¸? Testing commit 516d3a0 with merge ad3f352...",FALSE,TRUE,7,271,671,0,FALSE,TRUE,FALSE,TRUE,0,272
bors,"ðŸ’” Test failed - status-appveyor",FALSE,TRUE,5,272,672,0,FALSE,TRUE,FALSE,TRUE,0,273
TimNN,"Yay, looks like all the builds timed out again, so things seem to be good to go. (I didn't verify all the logs this time).",FALSE,TRUE,25,273,673,0,TRUE,FALSE,FALSE,TRUE,0,274
alexcrichton,"@TimNN looks great to me!",FALSE,TRUE,5,274,674,0,FALSE,FALSE,FALSE,TRUE,0,275
alexcrichton,"I hope to branch beta later today, so want to pull out the fast-fail? I'll r+ this after the beta is branched.",FALSE,TRUE,22,274,675,1,FALSE,TRUE,FALSE,TRUE,0,275
alexcrichton,"I'd also like to reiterate that you're at least my own personal  Rust Hero of the last N Months  where N is two and counting. If we delay this for 3 more days then it'll be a 2+ month PR!",FALSE,TRUE,40,274,676,2,FALSE,TRUE,FALSE,TRUE,0,275
TimNN,"@alexcrichton: I removed the always fail commit.",FALSE,TRUE,7,275,677,0,TRUE,TRUE,FALSE,TRUE,0,276
TimNN,"I'd also like to reiterate that you're at least my own personal  Rust Hero of the last N Months  where N is two and counting. If we delay this for 3 more days then it'll be a 2+ month PR!",FALSE,TRUE,40,275,678,1,TRUE,TRUE,FALSE,TRUE,0,276
TimNN,"Thanks a lot! All the positive encouragement and feedback has helped a lot in keeping me motivated to work on the upgrade :).",FALSE,TRUE,23,275,679,2,TRUE,TRUE,FALSE,TRUE,0,276
Kixunil,"I'd also like to reiterate that you're at least my own personal  Rust Hero of the last N Months ",FALSE,TRUE,19,276,680,0,FALSE,TRUE,FALSE,TRUE,0,277
Kixunil,"Mine too! :)",FALSE,TRUE,3,276,681,1,FALSE,TRUE,FALSE,TRUE,0,277
alexcrichton,"@bors: r+",FALSE,TRUE,2,277,682,0,FALSE,FALSE,FALSE,TRUE,0,278
alexcrichton,"Beta's branched, let's do this!",FALSE,TRUE,5,277,683,1,FALSE,TRUE,FALSE,TRUE,0,278
bors,"ðŸ“Œ Commit 8994277 has been approved by alexcrichton",FALSE,TRUE,8,278,684,0,FALSE,TRUE,FALSE,TRUE,0,279
bors,"âŒ›ï¸? Testing commit 8994277 with merge 0777c75...",FALSE,TRUE,7,279,685,0,FALSE,TRUE,FALSE,TRUE,0,280
bors,"â˜€ï¸? Test successful - status-appveyor, status-travisApproved by: alexcrichtonPushing 0777c75 to master...",FALSE,TRUE,11,280,686,0,FALSE,TRUE,FALSE,TRUE,0,281
brson,"Thanks for slogging through this @TimNN.",FALSE,TRUE,6,281,687,0,FALSE,FALSE,FALSE,TRUE,0,282
BatmanAoD,"Congratulations @TimNN!",FALSE,FALSE,2,282,688,0,FALSE,FALSE,FALSE,TRUE,0,283
DemiMarie,"Thank you @TimNN!",FALSE,FALSE,3,283,689,0,FALSE,FALSE,FALSE,TRUE,0,284
pkphilip,"Wow! Thanks a lot @TimNN! That is some effort!",FALSE,FALSE,9,285,691,0,FALSE,TRUE,FALSE,TRUE,0,286
Kixunil,"I've just noticed that README mentions clang 3.x. Shouldn't this be updated?",FALSE,TRUE,12,286,692,0,FALSE,TRUE,FALSE,TRUE,0,287
rkruppe,"@Kixunil That part of the readme is about the C and C++ compiler used for compiling C and C++ dependencies during the build, not about the LLVM version.",FALSE,FALSE,28,287,693,0,FALSE,TRUE,FALSE,TRUE,0,288
Kixunil,"@rkruppe I guess I'm too hungry and tired. Thank you for pointing that out! :)",FALSE,TRUE,15,288,694,0,FALSE,TRUE,FALSE,TRUE,0,289
