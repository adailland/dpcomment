% Generated by Discussion model rails.16485.txt
% File generated on 2017/08/09 19:32:25

@relation pr1502321545761

@attribute author String
@attribute textual String
@attribute isProjectMember {TRUE, FALSE}
@attribute isInvited {TRUE, FALSE}
@attribute numberOfWords numeric
@attribute commentsSoFar numeric
@attribute allUtterancesSoFar numeric
@attribute utterancesInCommentSoFar numeric
@attribute utteredByOriginalPoster {TRUE, FALSE}
@attribute hasCapitalizedWord {TRUE, FALSE}
@attribute containsShould {TRUE, FALSE}
@attribute hasDecisions {TRUE, FALSE}
@attribute howManyDecisions numeric
@attribute idComment numeric
@attribute idPara numeric

@data
rafaelfranca,"Can we avoid checking ActiveJob here? This is a high coupling between the two frameworks.",FALSE,FALSE,15,1,2,1,FALSE,TRUE,FALSE,TRUE,0,2,1
rafaelfranca,"I believe we should invert this dependency. Active Job should inject behaviour at Action Mailer when loaded, not Action Mailer that have to depend on Active Job.",FALSE,FALSE,27,2,4,1,FALSE,TRUE,TRUE,TRUE,0,3,1
seuros,"We need to prepend the mixin in actionmailer/base. We found out that prepend is not supported in ruby 1.9.3.Check this",FALSE,FALSE,20,3,6,1,FALSE,TRUE,FALSE,TRUE,0,4,1
jeremy,"IMO it's Action Mailer's job to be able to delay email. Active Job shouldn't care or know about that.",FALSE,FALSE,19,4,8,1,FALSE,TRUE,TRUE,TRUE,0,5,1
jeremy,"Rather than doing this check, we can always return a future message delivery. DeliverLater::MailMessageWrapper is a mouthful. Call it something like a MessageDelivery.",FALSE,FALSE,23,4,10,3,FALSE,TRUE,FALSE,TRUE,0,5,2
jeremy,"When people want to deliver it later, they call .deliver_later and that's that. The message isn't rendered, it's enqueued.",FALSE,FALSE,19,4,11,4,FALSE,TRUE,FALSE,TRUE,0,5,3
jeremy,"When people want to deliver it now, they call .deliver which passes through to the delegate object, the underlying Message.",FALSE,FALSE,20,4,12,5,FALSE,TRUE,FALSE,TRUE,0,5,4
jeremy,"So we preserve existing behavior and don't need special conditionals.",FALSE,FALSE,10,4,13,6,FALSE,TRUE,FALSE,TRUE,0,5,5
rafaelfranca,"I think We can make it work easily.",FALSE,FALSE,8,5,14,0,FALSE,TRUE,FALSE,TRUE,0,6,1
rafaelfranca,"First we need to move this definition of method_missing to a new module that we will included in the singleton class of ActionMailer::Base. After we only need to include the ActiveJob::DeliverLater module on ActionMailer::Base.singleton_class.",FALSE,FALSE,34,5,16,2,FALSE,TRUE,FALSE,TRUE,0,6,2
rafaelfranca,"Here a pseudo-implementation:",FALSE,FALSE,3,5,17,3,FALSE,TRUE,FALSE,TRUE,0,6,3
rafaelfranca,"I like @jeremy's idea",FALSE,FALSE,4,6,18,0,FALSE,FALSE,FALSE,TRUE,0,7,1
cristianbica,"I'm with @jeremy on who knows what: ActiveJob doesn't know about ActionMailer.@rafaelfranca nice workaround for ruby's override method in mixin issue but if ActionMailer knows about delivering later we can hook the logic in the ActionMailer::Base method_missing",FALSE,FALSE,37,7,19,0,FALSE,TRUE,FALSE,TRUE,0,8,1
dhh,"ðŸ‘? to @jeremy's idea as well.",FALSE,FALSE,6,8,20,0,TRUE,FALSE,FALSE,TRUE,0,9,1
dhh,"On Aug 13, 2014, at 10:45, Rafael MendonÃ§a FranÃ§a notifications@github.com wrote:",FALSE,FALSE,11,8,21,1,TRUE,TRUE,FALSE,TRUE,0,9,2
dhh,"In actionmailer/lib/action_mailer/base.rb:",FALSE,FALSE,2,8,22,2,TRUE,TRUE,FALSE,TRUE,0,9,3
dhh,"@@ -549,7 +549,11 @@ def set_payload_for_mail(payload, mail) #:nodoc:",FALSE,FALSE,8,8,23,3,TRUE,FALSE,FALSE,TRUE,0,9,4
dhh,"I like @jeremy's idea",FALSE,FALSE,4,8,24,4,TRUE,TRUE,FALSE,TRUE,0,9,5
dhh,"â€”Reply to this email directly or view it on GitHub.",FALSE,FALSE,10,8,25,5,TRUE,TRUE,FALSE,TRUE,0,9,6
cristianbica,"@jeremy so we make the DeliverLater::MailMessageWrapper a generic MessageDelivery and there we implement deliver_later which checks if ActiveJob is defined.The initial implementation of the wrapper wasn't building the Mail::Message on creation (didn't had the __getobj__ in initialize). There were some tests failing because they were testing behaviour from the mailer methods (ex: assert_raises(RuntimeError) { LateInlineAttachmentMailer.welcome }) and then we created the Mail::Message anyway. There were like less than 10 test cases so we can fix them (maybe using the new #itself method :) ).So to be clear: this implementation will change the behaviour of mailers. SomeMailer.some_email will return an ActionMailer::MessageDelivery which will be a Delegator around the Mail::Message which will be built lazy.",FALSE,FALSE,113,9,27,1,FALSE,TRUE,FALSE,TRUE,0,10,1
jeremy,"@cristianbica MessageDelivery#deliver_later needn't even do the Active Job check. If Active Job isn't available and the app is calling deliver_later, that's a bug and we should just let it raise whatever exception bubbles up.",FALSE,TRUE,34,10,29,1,FALSE,TRUE,TRUE,TRUE,0,11,1
seuros,"@jeremy , I'm working on it now.",FALSE,FALSE,7,11,30,0,FALSE,TRUE,FALSE,TRUE,0,12,1
matthewd,"Also, why the stderr message here, but not on the others?",FALSE,FALSE,11,12,33,2,FALSE,TRUE,FALSE,TRUE,0,13,1
cristianbica,"missing an => e ... I'll add that.about why here: dhh added that but I think we stderr here because resque is the only adapter that has a separate gem for enqueue_at/_in and probably users will forget to add it.",FALSE,TRUE,40,13,35,1,FALSE,TRUE,FALSE,TRUE,0,14,1
jeremy,"Was this from another recent PR?",FALSE,TRUE,6,14,36,0,FALSE,TRUE,FALSE,TRUE,0,15,1
seuros,"No. We noticed the bug while working of this PR.",FALSE,FALSE,10,15,37,0,FALSE,TRUE,FALSE,TRUE,0,16,1
seuros,"With the new wrapper, the email is lazy loaded.",FALSE,FALSE,9,15,38,1,FALSE,TRUE,FALSE,TRUE,0,16,2
sgrif,"Why even bother inheriting from Delegator, if we still need to do method_missing?",FALSE,FALSE,13,16,40,1,FALSE,TRUE,FALSE,TRUE,0,17,1
cristianbica,"Initially we didn't implement the method_missing here but it was an workaround for some failing tests. Something related to NullMail. I think we can fix the bugs in NullMailer and drop this. I'll take a look",FALSE,TRUE,36,17,42,1,FALSE,TRUE,FALSE,TRUE,0,18,1
cristianbica,"Removed the method_missing",FALSE,TRUE,3,18,43,0,FALSE,FALSE,FALSE,TRUE,0,19,1
jeremy,"We aren't actually delaying deliveries. It's just a delivery job.",FALSE,TRUE,10,19,45,1,FALSE,TRUE,FALSE,TRUE,0,20,1
seuros,"I will rename it",FALSE,FALSE,4,20,46,0,FALSE,FALSE,FALSE,TRUE,0,21,1
jeremy,"Where is #itself used here?n",FALSE,TRUE,5,21,48,1,FALSE,TRUE,FALSE,TRUE,0,22,1
seuros,"I forgot this require.",FALSE,FALSE,4,22,49,0,FALSE,FALSE,FALSE,TRUE,0,23,1
seuros,"We first used it inLateInlineAttachmentMailer.welcome.itself but decided it make it more clear with .message",FALSE,FALSE,14,22,51,2,FALSE,TRUE,FALSE,TRUE,0,23,2
dhh,"Sounds like we can remove this require, then.",FALSE,FALSE,8,23,52,0,TRUE,FALSE,FALSE,TRUE,0,24,1
seuros,"Yes, i will do it as part of another commit.",FALSE,FALSE,10,24,53,0,FALSE,FALSE,FALSE,TRUE,0,25,1
jeremy,"What are these tests telling us? Bunch of stubs?",FALSE,TRUE,9,25,54,0,FALSE,TRUE,FALSE,TRUE,0,26,1
jeremy,"Also, assertion arguments are expected, actual - so you'll want to flip the order.",FALSE,TRUE,14,25,55,1,FALSE,TRUE,FALSE,TRUE,0,26,2
tenderlove,"Agree with @jeremy.  What is the point of these stubs?  It looks like we're just testing stubs rather than testing our system.  What is the point?",FALSE,FALSE,29,27,58,1,FALSE,TRUE,FALSE,TRUE,0,28,1
jeremy,"Would like this to be configurable in the Railtie and default to the application name.",FALSE,TRUE,15,28,60,1,FALSE,TRUE,FALSE,TRUE,0,29,1
cristianbica,"Actually I wanted to remove this and add a :default_queue_name. If the queue is specified in the job it will use it or else it will use the default_queue_name.I see no point in having my queue prefixed by something. For some of the adapter you need to specify on which queue to listen for and for newcomers the default configuration will  not be so good  :). Also the default_queue should be default. I think most of the adapter listen on default so new users will have better defaults.",FALSE,TRUE,88,29,62,1,FALSE,TRUE,TRUE,TRUE,0,30,1
cristianbica,"/cc @dhh",FALSE,TRUE,2,29,63,2,FALSE,FALSE,FALSE,TRUE,0,30,2
cristianbica,"Did the above at seuros/rails@94ae25e. @dhh wanna take a look please?",FALSE,TRUE,11,30,64,0,FALSE,FALSE,FALSE,TRUE,0,31,1
tenderlove,"Logger.new(nil) will work instead and is cross platform.",FALSE,FALSE,8,31,65,0,FALSE,FALSE,FALSE,TRUE,0,32,1
jeremy,"Should generate a job that takes some arguments so it's clear that's the typical usage. Schedule a job with an AR instance as an argument.",FALSE,TRUE,25,33,68,1,FALSE,TRUE,FALSE,TRUE,0,34,1
cristianbica,"Agree. I'll do that",FALSE,TRUE,4,34,69,0,FALSE,TRUE,FALSE,TRUE,0,35,1
tenderlove,"Is this actually a requirement?  Why does it have to be this class?",FALSE,FALSE,14,36,72,1,FALSE,TRUE,FALSE,TRUE,0,37,1
seuros,"ActionMailer::MessageDelivery is a wrapper around Mail::Message",FALSE,FALSE,6,37,74,1,FALSE,TRUE,FALSE,TRUE,0,38,1
cristianbica,"With AJ SomeMailer.some_method_mailer is a wrapper around whatever SomeMailer.some_method_mailer returns. We need to test that somehow. Either by the class name or by any methods implemented on the wrapper.",FALSE,TRUE,29,39,77,1,FALSE,TRUE,FALSE,TRUE,0,40,1
tenderlove,"Could you assert that the wrapped object doesn't equal the unwrapped one?",FALSE,FALSE,12,40,79,1,FALSE,TRUE,FALSE,TRUE,0,41,1
seuros,"assert_not_equal Mail::Message , @mail.class ?",FALSE,FALSE,5,41,80,0,FALSE,TRUE,FALSE,TRUE,0,42,1
tenderlove,"Is there no way to get the actual message object, not the wrapped one?",FALSE,FALSE,14,42,82,1,FALSE,TRUE,FALSE,TRUE,0,43,1
cristianbica,"@tenderlove as the wrapper is a Delegator we cannot because delegator overrides == and compares the wrapped object (so @mail==@mail.message will be true). What we can assert is that the class of the wrapper is different from the class of the wrapped object: assert_not_equal @mail.class, @mail.message.class. Works for you?",FALSE,TRUE,49,44,85,1,FALSE,TRUE,FALSE,TRUE,0,45,1
tenderlove,"Is this public API?  Should we really be coupling the tests with internal implementation details like this?",FALSE,TRUE,18,45,87,1,FALSE,TRUE,FALSE,TRUE,0,46,1
seuros,"The message is lazy loaded now.What about",FALSE,FALSE,7,46,88,0,FALSE,FALSE,FALSE,TRUE,0,47,1
tenderlove,"I don't think you're following me.  Why do you care what class it is?  Just do assert @mail.message.",FALSE,TRUE,20,47,90,1,FALSE,TRUE,FALSE,TRUE,0,48,1
tenderlove,"Are we going to have to update this in parallel with the Gemfile?  :'(",FALSE,TRUE,15,48,91,0,FALSE,TRUE,FALSE,TRUE,0,49,1
tenderlove,"Every time this list changes, do we have to update this list as well?",FALSE,TRUE,14,49,92,0,FALSE,FALSE,FALSE,TRUE,0,50,1
DouweM,"Every time tests for an adapter are added, yes.",FALSE,FALSE,9,50,93,0,FALSE,FALSE,FALSE,TRUE,0,51,1
cristianbica,"Well every time a new adapter is added or an adapter removed we have to:",FALSE,TRUE,15,51,94,0,FALSE,FALSE,FALSE,TRUE,0,52,1
cristianbica,"update the Gemfile",FALSE,TRUE,3,51,95,1,FALSE,TRUE,FALSE,TRUE,0,52,2
cristianbica,"update the activejob/Rakefile",FALSE,TRUE,3,51,96,2,FALSE,FALSE,FALSE,TRUE,0,52,3
cristianbica,"update activejob/README.md",FALSE,TRUE,2,51,97,3,FALSE,FALSE,FALSE,TRUE,0,52,4
cristianbica,"update the guides",FALSE,TRUE,3,51,98,4,FALSE,FALSE,FALSE,TRUE,0,52,5
cristianbica,"and of course delete /  add the adapter files for enqueueing and testing",FALSE,TRUE,14,51,99,5,FALSE,FALSE,FALSE,TRUE,0,52,6
cristianbica,"Not very optional :). From the above we can remove most the README.md and point to the guides.",FALSE,TRUE,18,51,100,6,FALSE,TRUE,FALSE,TRUE,0,52,7
tenderlove,"Does this mean we don't use the logger from the application by default?",FALSE,TRUE,13,52,102,1,FALSE,TRUE,FALSE,TRUE,0,53,1
tenderlove,"If this references ActiveSupport::TaggedLogging and ActiveSupport::Logger, it should also require those files.",FALSE,TRUE,12,52,103,2,FALSE,TRUE,TRUE,TRUE,0,53,2
DouweM,"I think the railtie does that.",FALSE,FALSE,6,53,104,0,FALSE,FALSE,FALSE,TRUE,0,54,1
seuros,"yes it does",FALSE,FALSE,3,54,105,0,FALSE,FALSE,FALSE,TRUE,0,55,1
carlosantoniodasilva,"Plus it might be better to use class_attribute, so that it can be overridden without affecting parents.",FALSE,FALSE,17,55,107,1,FALSE,TRUE,FALSE,TRUE,0,56,1
cristianbica,"Yep it set the railtie does it.I see no need in being able to change the logger just for a ActiveJob::Base subclass. Anyway if anyone wants to do that they can override def logger in that subclass.",FALSE,TRUE,37,56,109,1,FALSE,TRUE,FALSE,TRUE,0,57,1
tenderlove,"Why are you using a global variable here?",FALSE,TRUE,8,57,110,0,FALSE,FALSE,FALSE,TRUE,0,58,1
tenderlove,"Same question.",FALSE,TRUE,2,58,111,0,FALSE,FALSE,FALSE,TRUE,0,59,1
seuros,"The worker populate this Global variable there!",FALSE,FALSE,7,59,112,0,FALSE,TRUE,FALSE,TRUE,0,60,1
dhh,"I think a global is just fine. The job and the test aren't connected. The global is a stand-in for any other global in your system that the jobs would be working against, like a database.",FALSE,TRUE,36,60,114,1,TRUE,TRUE,FALSE,TRUE,0,61,1
tenderlove,"@dhh it's not thread or process safe.  We should at least be using a thread local variable.  Databases have locks for us to coordinate updates, global variables do not. :-)",FALSE,TRUE,32,61,116,1,FALSE,TRUE,TRUE,TRUE,0,62,1
dhh,"Why does it matter for these tests though? Is this in preparation for you adding a threaded runner :)?",FALSE,TRUE,19,62,118,1,TRUE,TRUE,FALSE,TRUE,0,63,1
dhh,"On Aug 14, 2014, at 18:33, Aaron Patterson notifications@github.com wrote:",FALSE,TRUE,10,62,119,2,TRUE,TRUE,FALSE,TRUE,0,63,2
dhh,"In activejob/test/cases/logging_test.rb:",FALSE,TRUE,2,62,120,3,TRUE,TRUE,FALSE,TRUE,0,63,3
dhh,"class TestLogger < ActiveSupport::Logger",FALSE,TRUE,4,62,121,4,TRUE,TRUE,FALSE,TRUE,0,63,4
dhh,"def initialize",FALSE,TRUE,2,62,122,5,TRUE,FALSE,FALSE,TRUE,0,63,5
dhh,"def messages",FALSE,TRUE,2,62,124,7,TRUE,FALSE,FALSE,TRUE,0,63,6
dhh,"def setup",FALSE,TRUE,2,62,127,10,TRUE,FALSE,FALSE,TRUE,0,63,7
dhh,"$BUFFER = []@dhh it's not thread or process safe. We should at least be using a thread local variable. Databases have locks for us to coordinate updates, global variables do not. :-)",FALSE,TRUE,32,62,130,13,TRUE,TRUE,TRUE,TRUE,0,63,8
dhh,"â€”Reply to this email directly or view it on GitHub.",FALSE,TRUE,10,62,131,14,TRUE,TRUE,FALSE,TRUE,0,63,9
tenderlove,"Trying to reason about a global variables is extremely annoying -- even in tests.  We could at least place a class method on the job itself and mutate that.  I don't mind that global state is being changed, I mind that it's not hidden behind methods so we can lock (or do whatever).",FALSE,TRUE,55,63,133,1,FALSE,TRUE,FALSE,TRUE,0,64,1
cristianbica,"I'll try something. I was thinking of a TestingBuffer module that responds to add, include?, clear.",FALSE,TRUE,16,64,135,1,FALSE,TRUE,FALSE,TRUE,0,65,1
tenderlove,"@cristianbica that would work. I think a thread local variable would be totally fine for now.",FALSE,TRUE,16,65,137,1,FALSE,TRUE,FALSE,TRUE,0,66,1
dhh,"YAGNI, in my opinion. When a case arises where we do need to wrap this, we wrap it. It's only in test code and it's only a handful of lines.",FALSE,TRUE,30,66,139,1,TRUE,TRUE,FALSE,TRUE,0,67,1
dhh,"On Aug 14, 2014, at 19:17, Aaron Patterson notifications@github.com wrote:",FALSE,TRUE,10,66,140,2,TRUE,TRUE,FALSE,TRUE,0,67,2
dhh,"In activejob/test/cases/logging_test.rb:",FALSE,TRUE,2,66,141,3,TRUE,TRUE,FALSE,TRUE,0,67,3
dhh,"class TestLogger < ActiveSupport::Logger",FALSE,TRUE,4,66,142,4,TRUE,TRUE,FALSE,TRUE,0,67,4
dhh,"def initialize",FALSE,TRUE,2,66,143,5,TRUE,FALSE,FALSE,TRUE,0,67,5
dhh,"def messages",FALSE,TRUE,2,66,145,7,TRUE,FALSE,FALSE,TRUE,0,67,6
dhh,"def setup",FALSE,TRUE,2,66,148,10,TRUE,FALSE,FALSE,TRUE,0,67,7
dhh,"$BUFFER = []Trying to reason about a global variables is extremely annoying -- even in tests. We could at least place a class method on the job itself and mutate that. I don't mind that global state is being changed, I mind that it's not hidden behind methods so we can lock (or do whatever).",FALSE,TRUE,55,66,151,13,TRUE,TRUE,FALSE,TRUE,0,67,8
dhh,"â€”Reply to this email directly or view it on GitHub.",FALSE,TRUE,10,66,152,14,TRUE,TRUE,FALSE,TRUE,0,67,9
cristianbica,"Did a search for $BUFFER and replaced with Thread.current[:ajbuffer]",FALSE,TRUE,9,67,153,0,FALSE,TRUE,FALSE,TRUE,0,68,1
tenderlove,"Let's think of a different way to do this besides using a global!",FALSE,TRUE,13,70,156,0,FALSE,FALSE,FALSE,TRUE,0,71,1
carlosantoniodasilva,"Could at least have a class attribute with the messages you want to store to test against it, it's more self-contained.",FALSE,FALSE,21,71,157,0,FALSE,FALSE,FALSE,TRUE,0,72,1
tenderlove,"What does this rescue from?  When does it rescue? Why does it rescue?  Can we just use normal Ruby?",FALSE,TRUE,21,72,159,1,FALSE,TRUE,FALSE,TRUE,0,73,1
seuros,"It rescue when perform is called with 'david' as params",FALSE,FALSE,10,73,161,1,FALSE,TRUE,FALSE,TRUE,0,74,1
dhh,"rescue_from allows us to declare exceptional handling behavior at the class level. Just like we do with controllers in Action Pack. Same justification.",FALSE,TRUE,23,74,163,1,TRUE,TRUE,FALSE,TRUE,0,75,1
DouweM,"It also enables rescuing from deserialization errors (for example a model referenced using global id no longer existing), which wouldn't be possible with begin/rescue inside perform.",FALSE,FALSE,26,75,165,1,FALSE,TRUE,FALSE,TRUE,0,76,1
tenderlove,"@dhh if this code is from AP, then what are we testing?  If we know rescue_from works, why are we testing it?",FALSE,TRUE,23,76,166,0,FALSE,TRUE,FALSE,TRUE,0,77,1
tenderlove,"Besides that, it seems like a great way to accidentally create an infinite loop:",FALSE,TRUE,14,76,167,1,FALSE,TRUE,FALSE,TRUE,0,77,2
tenderlove,"@DouweM I don't actually see a place where deserialization will raise an exception, but presumably you could implement execute and call super with a begin / rescue.",FALSE,TRUE,27,76,169,3,FALSE,TRUE,FALSE,TRUE,0,77,3
DouweM,"We're testing retry_now and proper falling through of OtherError (there used to be abut there).",FALSE,TRUE,15,77,170,0,FALSE,TRUE,FALSE,TRUE,0,78,1
DouweM,"Accidental infinite loop because of retry_now, you mean? Doesn't the same go for the retry keyword? Rescuing from ArgumentError is a terrible idea anyway, and just here to illustrate rescue_from's re-enqueueing behavior.",FALSE,TRUE,32,77,171,1,FALSE,TRUE,FALSE,TRUE,0,78,2
DouweM,"Deserialization calls ActiveModel::GlobalLocator.locate, which calls Model.find, which could definitely raise ActiveRecord::RecordNotFound (https://github.com/rails/activemodel-globalid/blob/master/lib/active_model/global_locator.rb#L7). This is common enough that we don't want people to have to override the internal method execute, and besides, people know rescue_from from AC. Also see the discussion here: rails/activejob#25 which went into another direction as for implementation but concerns the same issue.",FALSE,TRUE,55,77,173,3,FALSE,TRUE,FALSE,TRUE,0,78,3
tenderlove,"Accidental infinite loop because of retry_now, you mean? Doesn't the same go for the retry keyword? Rescuing from ArgumentError is a terrible idea anyway, and just here to illustrate rescue_from's re-enqueueing behavior.",FALSE,TRUE,32,78,174,0,FALSE,TRUE,FALSE,TRUE,0,79,1
tenderlove,"Yes, retry would have the same behavior. But which of these might look like there's an infinite loop?",FALSE,TRUE,18,78,175,1,FALSE,TRUE,FALSE,TRUE,0,79,2
tenderlove,"Sorry, I think rescue_from is a bad idea in this context.  Surely rescuing some particular exception can't have the same logic for every single method in your object.  I don't mind if rescue_from is available in the job class, but we won't be using it in our apps.  I'd rather do it the OO way and inherit / call super.  If an exception is happening in an unexpected place, we should handle it in that one place, not some disconnected global way.",FALSE,TRUE,86,78,178,4,FALSE,TRUE,TRUE,TRUE,0,79,3
tenderlove,"I'm unsure how a an AJ Job is so similar to a controller that it warrants the same justification for this feature.",FALSE,TRUE,22,78,179,5,FALSE,TRUE,FALSE,TRUE,0,79,4
DouweM,"Yes, retry would have the same behavior. But which of these might look like there's an infinite loop?",FALSE,TRUE,18,79,180,0,FALSE,TRUE,FALSE,TRUE,0,80,1
DouweM,"If we're leaving in the rescue_from block, I think it's about equal, with rescue error one line away from the retry action and just a couple more from the culprit code.",FALSE,TRUE,31,79,181,1,FALSE,TRUE,FALSE,TRUE,0,80,2
DouweM,"Both examples are kind of dumb though, because you'd never rescue ArgumentError and retry. In actual non-test jobs, the developer has made the conscious decision the error they're explicitly rescuing from can be safely retried, so an  accidental infinite loop  seems very unlikely to sneak in.",FALSE,TRUE,46,79,183,3,FALSE,TRUE,FALSE,TRUE,0,80,3
DouweM,"Surely rescuing some particular exception can't have the same logic for every single method in your object.",FALSE,TRUE,17,79,185,5,FALSE,TRUE,FALSE,TRUE,0,80,4
DouweM,"Good point. I was working under the assumption a job would only have a single #perform method (like most of mine do) and no other methods, so very much like controller actions. In that case rescue_from makes sense, but less so in the situation you describe.",FALSE,TRUE,46,79,186,6,FALSE,TRUE,FALSE,TRUE,0,80,5
DouweM,"I don't think I'm alone in preferring simple jobs with a #perform that doesn't do much more than calling a handful of methods on another class or a provided model, so I would really like to keep rescue_from in with easy rescuing from ActiveRecord::RecordNotFound, but of course this still leaves people with more complex jobs (like you) free to inherit and call super from execute.",FALSE,TRUE,65,79,188,8,FALSE,TRUE,FALSE,TRUE,0,80,6
seuros,"ping @mperham",FALSE,FALSE,2,80,189,0,FALSE,FALSE,FALSE,TRUE,0,81,1
tenderlove,"My point is two fold, 1) if you're looking at the implementation of a method, why would you consider some block that is not part of that method to have any impact on it? and 2) if you're only implementing perform why bother with using some special syntax for rescuing exceptions?",FALSE,TRUE,51,81,190,0,FALSE,FALSE,FALSE,TRUE,0,82,1
tenderlove,"I can see rescue_from to be handy in controllers where you have a bunch of methods that do about the same thing (finding records), but I don't see the parallel between controllers and jobs.",FALSE,TRUE,34,81,192,2,FALSE,TRUE,FALSE,TRUE,0,82,2
DouweM,"The whole issue started because I pointed out deserialization with GlobalID could raise ActiveRecord::RecordNotFound, which would lead to an infinitely requeued job on at least Sidekiq (rails/activejob#25). After a little bit of discussion, loaning rescue_from from AC was suggested by @dhh because it would do the trick and be familiar to users.",FALSE,TRUE,52,82,193,0,FALSE,TRUE,FALSE,TRUE,0,83,1
DouweM,"I'm not married to #rescue_from and I agree that it introduces a couple of new issues/potentially confusing behaviour. In the end, all I would really like is a way to handle those RecordNotFound errors that is straightforward and easy enough to be recommended to and used by less experienced AJ users who use it with GlobalID models.",FALSE,TRUE,57,82,195,2,FALSE,TRUE,FALSE,TRUE,0,83,2
DouweM,"If we're moving away from rescue_from, we're pretty much restarting that discussion. Do you have any input on the problem described there, any other ideas on ways to handle it?",FALSE,TRUE,30,82,196,3,FALSE,TRUE,FALSE,TRUE,0,83,3
tenderlove,"Maybe this sample code will drive home the point why I think rescue_from for handling argument deserialization is a bad idea:",FALSE,TRUE,21,83,197,0,FALSE,TRUE,FALSE,TRUE,0,84,1
tenderlove,"I should mention that if you assume the RecordNotFound error originated from deserializing arguments rather than a mistake you made, then you will have another fun case of an infinite loop.",FALSE,TRUE,31,83,199,2,FALSE,TRUE,TRUE,TRUE,0,84,2
tenderlove,"If we want a way for dealing with deserialization errors, we should add a more specific way of doing that.  Maybe something like this:",FALSE,TRUE,25,83,200,3,FALSE,TRUE,TRUE,TRUE,0,84,3
dhh,"We are just testing the integration of that library. Hence why there are no tests for all the permutations of reacue_from, just a single test for it.",FALSE,TRUE,27,84,201,0,TRUE,TRUE,FALSE,TRUE,0,85,1
dhh,"On Aug 14, 2014, at 19:03, Aaron Patterson notifications@github.com wrote:",FALSE,TRUE,10,84,202,1,TRUE,TRUE,FALSE,TRUE,0,85,2
dhh,"In activejob/test/jobs/rescue_job.rb:",FALSE,TRUE,2,84,203,2,TRUE,TRUE,FALSE,TRUE,0,85,3
dhh,"@@ -0,0 +1,20 @@+class RescueJob < ActiveJob::Base",FALSE,TRUE,7,84,204,3,TRUE,TRUE,FALSE,TRUE,0,85,4
dhh,"class OtherError < StandardError; end",FALSE,TRUE,5,84,205,4,TRUE,TRUE,FALSE,TRUE,0,85,5
dhh,"rescue_from(ArgumentError) do@dhh if this code is from AP, then what are we testing? If we know rescue_from works, why are we testing it?",FALSE,TRUE,23,84,206,5,TRUE,TRUE,FALSE,TRUE,0,85,6
dhh,"Besides that, it seems like a great way to accidentally create an infinite loop:",FALSE,TRUE,14,84,207,6,TRUE,TRUE,FALSE,TRUE,0,85,7
dhh,"require 'active_job'",FALSE,TRUE,2,84,208,7,TRUE,FALSE,FALSE,TRUE,0,85,8
dhh,"class RescueJob < ActiveJob::Baserescue_from(ArgumentError) doarguments[0] =  DIFFERENT! retry_nowend",FALSE,TRUE,7,84,209,8,TRUE,TRUE,FALSE,TRUE,0,85,9
dhh,"def perform(name)my_helper # oops! I forgot the argend",FALSE,TRUE,8,84,210,9,TRUE,TRUE,FALSE,TRUE,0,85,10
dhh,"def my_helper(name)puts  Hello: #{name} endend",FALSE,TRUE,4,84,211,10,TRUE,FALSE,FALSE,TRUE,0,85,11
dhh,"RescueJob.new.execute(SecureRandom.uuid)@DouweM I don't actually see a place where deserialization will raise an exception, but presumably you could implement execute and call super with a begin / rescue.",FALSE,TRUE,27,84,212,11,TRUE,TRUE,FALSE,TRUE,0,85,12
dhh,"â€”Reply to this email directly or view it on GitHub.",FALSE,TRUE,10,84,213,12,TRUE,TRUE,FALSE,TRUE,0,85,13
cristianbica,"How about we leave the rescue_from and on deserialization error we raise an ActionJob::DeserializationError in which we give the actual exception--Cristian Bica",FALSE,TRUE,22,85,215,1,FALSE,TRUE,FALSE,TRUE,0,86,1
cristianbica,"On Fri, Aug 15, 2014 at 7:06 PM, Aaron Patterson notifications@github.comwrote:",FALSE,TRUE,11,85,216,2,FALSE,TRUE,FALSE,TRUE,0,86,2
cristianbica,"@@ -0,0 +1,20 @@+class RescueJob < ActiveJob::Base",FALSE,TRUE,7,85,217,3,FALSE,TRUE,FALSE,TRUE,0,86,3
cristianbica,"class OtherError < StandardError; end",FALSE,TRUE,5,85,218,4,FALSE,TRUE,FALSE,TRUE,0,86,4
cristianbica,"rescue_from(ArgumentError) doMaybe this sample code will drive home the point why I think rescue_from for handling argument deserialization is a bad idea:",FALSE,TRUE,22,85,219,5,FALSE,TRUE,FALSE,TRUE,0,86,5
cristianbica,"If we want a way for dealing with deserialization errors, we should add a more specific way of doing that.  Maybe something like this:",FALSE,TRUE,25,85,220,6,FALSE,TRUE,TRUE,TRUE,0,86,6
cristianbica,"self.arguments = Arguments.deserialize(serialized_args)",FALSE,TRUE,3,85,221,7,FALSE,TRUE,FALSE,TRUE,0,86,7
cristianbica,"run_callbacks :perform doperform arguments@@ -23,5 +27,9 @@ module ActiveJobdef perform()raise NotImplementedErrorend+",FALSE,TRUE,11,85,222,8,FALSE,TRUE,FALSE,TRUE,0,86,8
cristianbica,"def deserialization_error(exception)",FALSE,TRUE,2,85,223,9,FALSE,FALSE,FALSE,TRUE,0,86,9
tenderlove,"@cristianbica that sounds great.  Now I wonder, if there's only one method that can raise this exception, what's the point of using rescue_from?  I don't mind if we leave it in so people can use it, but I'd like to add this patch:",FALSE,TRUE,45,86,225,0,FALSE,TRUE,FALSE,FALSE,1,87,1
tenderlove,"so that in our job we can deal with fixing the arguments independently from errors in perform:",FALSE,TRUE,17,86,226,1,FALSE,FALSE,FALSE,TRUE,0,87,2
dhh,"I'll follow up with full arguments later, but I remain happy with the inclusion of rescue_from. Nobody is forcing you to use it, just like in controllers. Anyway, I'll expand the argument later, but don't remove this for now.",FALSE,TRUE,39,87,227,0,TRUE,TRUE,FALSE,TRUE,0,88,1
dhh,"On Aug 15, 2014, at 9:01, Douwe Maan notifications@github.com wrote:",FALSE,TRUE,10,87,228,1,TRUE,TRUE,FALSE,TRUE,0,88,2
dhh,"In activejob/test/jobs/rescue_job.rb:",FALSE,TRUE,2,87,229,2,TRUE,TRUE,FALSE,TRUE,0,88,3
dhh,"@@ -0,0 +1,20 @@+class RescueJob < ActiveJob::Base",FALSE,TRUE,7,87,230,3,TRUE,TRUE,FALSE,TRUE,0,88,4
dhh,"class OtherError < StandardError; end",FALSE,TRUE,5,87,231,4,TRUE,TRUE,FALSE,TRUE,0,88,5
dhh,"rescue_from(ArgumentError) doThe whole issue started because I pointed out deserialization with GlobalID could raise ActiveRecord::RecordNotFound, which would lead to an infinitely requeued job on at least Sidekiq (rails/activejob#25). After a little bit of discussion, loaning rescue_from from AC was suggested by @dhh because it would do the trick and be familiar to users.",FALSE,TRUE,53,87,232,5,TRUE,TRUE,FALSE,TRUE,0,88,6
dhh,"I'm not married to #rescue_from and I agree that it introduces a couple of new issues. In the end, all I would really like is a way to handle those RecordNotFound errors that is straightforward and easy enough to be recommended to and used by less experienced AJ users who use it with GlobalID models.",FALSE,TRUE,55,87,234,7,TRUE,TRUE,FALSE,TRUE,0,88,7
dhh,"If we're moving away from rescue_from, we're pretty much restarting that discussion. Do you have any input on the problem described there, any other ideas on ways to handle it?",FALSE,TRUE,30,87,235,8,TRUE,TRUE,FALSE,TRUE,0,88,8
dhh,"â€”Reply to this email directly or view it on GitHub.",FALSE,TRUE,10,87,236,9,TRUE,TRUE,FALSE,TRUE,0,88,9
seuros,"@tenderlove you can add  your commit to the actual PR.",FALSE,FALSE,11,88,237,0,FALSE,TRUE,FALSE,TRUE,0,89,1
tenderlove,"@dhh as long as we have an appropriate methods (like my patch above) then I don't particularly care if rescue_from is included.  I do look forward to rebutting your full arguments though.",FALSE,TRUE,33,89,238,0,FALSE,TRUE,FALSE,TRUE,0,90,1
dhh,"I don't think that's a good change. We should change GlobalID to raise a specific error, so you can rescue that without rescuing generic ArgumentErrors, but it doesn't make sense to me to force people implement their own handling like what's being proposed here.",FALSE,TRUE,44,90,241,2,TRUE,TRUE,TRUE,TRUE,0,91,1
dhh,"You don't need rescue_from when you're rescuing app exceptions that stem from your own code that's being run in that #perform method. But it's a great pattern when you're rescuing errors from services outside of your control. The deserialization is one example, here's another we're using pre-AJ in Basecamp (so I've just rewritten as pseudo code here):",FALSE,TRUE,57,90,243,4,TRUE,TRUE,FALSE,TRUE,0,91,2
dhh,"We have some similar rescues around errors that can come from our CleverSafe file storage system that our jobs interface with. We don't want to rescue those explicitly in #perform.",FALSE,TRUE,30,90,244,5,TRUE,TRUE,FALSE,TRUE,0,91,3
dhh,"This is exactly the same motivation we have for rescue_from in AP. You rescue general classes of generic errors, like ActiveRecord::RecordNotFound, and give them generic errors like 404. You then combine that with specific rescues in your action methods, if those are specific to that action.",FALSE,TRUE,46,90,245,6,TRUE,TRUE,FALSE,TRUE,0,91,4
tenderlove,"force people implement their own handling like what's being proposed here.",FALSE,TRUE,11,91,246,0,FALSE,FALSE,FALSE,TRUE,0,92,1
tenderlove,"I will quote you,  nobody is forcing you to use it .  I am proposing that 1) we add a new exception ActionJob::DeserializationError (as @cristianbica suggests), and 2) extract argument deserialization to a method. Nobody is forcing you to implement the extracted method, but you can if you want, and you can still use rescue_from.",FALSE,TRUE,55,91,248,2,FALSE,TRUE,FALSE,TRUE,0,92,2
tenderlove,"As a selfish argument, we'll need this method to migrate custom arg serialization (we're using marshal not JSON).  We could end up in infinite loops with rescue_from if we don't have this hook method to distinguish between arg deserialization and job processing.",FALSE,TRUE,43,91,250,4,FALSE,TRUE,FALSE,TRUE,0,92,3
dhh,"I'm ðŸ‘? on #1, but not really in favor of #2. But if you feel so strongly about it, then alright, let's do that.",FALSE,TRUE,24,92,251,0,TRUE,TRUE,FALSE,TRUE,0,93,1
tenderlove,"@dhh â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?â?¤ï¸?ðŸ˜?",FALSE,TRUE,2,93,252,0,FALSE,FALSE,FALSE,TRUE,0,94,1
sgrif,"Sounds more like a lazy job than an active one.",FALSE,FALSE,10,94,253,0,FALSE,FALSE,FALSE,TRUE,0,95,1
sgrif,"Does this mean that there is no way to provide arguments to a job that aren't primitives? Shouldn't any marshalable object be allowed here?",FALSE,FALSE,24,96,255,1,FALSE,TRUE,FALSE,TRUE,0,97,1
seuros,"Yes and No. Sidekiq and Resque serialize objects to json and send it to redis, Qu do that with redis and mongodb.",FALSE,FALSE,22,97,257,1,FALSE,TRUE,FALSE,TRUE,0,98,1
sgrif,"Seems like something we should leave up to the queueing adapters, rather than disallowing entirely, similarly to enqueue_at.",FALSE,FALSE,18,98,259,1,FALSE,TRUE,TRUE,TRUE,0,99,1
seuros,"I don't remember well why we did that .cc @DouweM @dhh @mperham @cristianbica @rafaelfranca",FALSE,FALSE,14,99,260,0,FALSE,FALSE,FALSE,TRUE,0,100,1
dhh,"That would prevent you from switching between adapters. The whole point here is to provide a uniform interface, so I don't think that's a good idea.",FALSE,TRUE,26,100,262,1,TRUE,TRUE,FALSE,TRUE,0,101,1
sgrif,"Don't we already do that by providing enqueue_at, which isn't supported universally? The same argument could be made in Active Record for disallowing anything specific to a single database. While it's awesome to provide a common interface, and abstract away what we can, it doesn't make sense to me that we would hamstring basic functionality that is implemented in a similar enough fashion by almost all supported backends.",FALSE,FALSE,68,101,265,2,FALSE,TRUE,FALSE,TRUE,0,102,1
dhh,"It's not implemented by all supported backends. Anyone using JSON as the storage format, like Resque, can't deal with arbitrary serialization. Much harder to entangle later than simply dealing with serialization up front if you are to remain queue agnostic -- which is the whole point of ActiveJob.",FALSE,TRUE,48,102,267,1,TRUE,TRUE,FALSE,TRUE,0,103,1
sgrif,"From my point of view, I'd see the use case the same as Active Record, allowing code that provides common functionality to be structured the same way and put in the same place, regardless of the back end being used. Possibly also allowing the decision of which back end to use to be delayed. However, similarly to switching between database implementations later, it seems that switching between queueing implementations after the fact would be less common. If the user wants to be stuck with only queues that use YAML or Marshal for serialization, why shouldn't we let them? Why does this argument not apply to enqueue_at, which also isn't supported by all queueing backends?",FALSE,FALSE,114,103,269,1,FALSE,TRUE,TRUE,TRUE,0,104,1
dhh,"I don't think it's the same situation at all. This is something much more likely to trip you up. Some adapters take some params, others don't. It's much clearer to say  delayed job scheduling  is supported here and not there. Way too easy to write code that didn't need to use a custom class and that works on the random queue you're on, then doesn't work on the next. And there's just not enough gain.",FALSE,TRUE,75,104,271,1,TRUE,TRUE,FALSE,TRUE,0,105,1
sgrif,"And there's just not enough gain.",FALSE,FALSE,6,105,272,0,FALSE,FALSE,FALSE,TRUE,0,106,1
sgrif,"I suppose the relative value depends on how much you're using non-primitives. Forcing users to deal with serializing/deserializing likely removes all ability to duck type arguments to jobs.",FALSE,FALSE,28,105,273,1,FALSE,TRUE,FALSE,TRUE,0,106,2
dhh,"I'd be happy to see some job code using lots of non-primitives to reconsider. This is an extraction, and from the usage I've seen so far, I haven't found any that couldn't just as well be primitives plus GID'ables.",FALSE,TRUE,39,106,274,0,TRUE,TRUE,FALSE,TRUE,0,107,1
sgrif,"Example use case from my current project: A job which applies a set of transformations to a file, and moves it to the appropriate location. Arguments are the path of the current file (which is on S3), the expected location (on S3), the bucket name, and an array of transformations (would have been a single object if YAML dumping SimpleDelegator subclasses wasn't such a pain). Simplest case is just providing an encoder which gzips the file, but there are also uses which will include things such as converting a JSON based animation file format to a binary one, minifying ruby code, and losslessly compressing image files.",FALSE,FALSE,106,107,275,0,FALSE,TRUE,FALSE,TRUE,0,108,1
sgrif,"Allowing me to restrict myself to YAML/Marshal based queues would let me pass in the objects directly. This restriction forces a serializer/deserializer combo, which is tightly coupled to certain implementation details of these objects. The ones that take constructor arguments become especially tricky, and overall I'm forced to switch from object oriented to class oriented, since now all I have to work with are primitives and class objects, which means I need a consistent interface for the constructors of unrelated objects where previously I could just duck type.",FALSE,FALSE,88,107,277,2,FALSE,TRUE,FALSE,TRUE,0,108,2
dhh,"Please do post some of this code somewhere, if you can.",FALSE,TRUE,11,108,278,0,TRUE,FALSE,FALSE,TRUE,0,109,1
sgrif,"I don't have a before/after comparison, since we're not using ActiveJob and are using a queueing library that supports YAML, but I can pull out some of the relevant bits as they are today.",FALSE,FALSE,34,109,279,0,FALSE,TRUE,FALSE,TRUE,0,110,1
sgrif,"Here's the job itself, and the basic interface of the most important transformers that we use. https://gist.github.com/sgrif/5920ca3d46a76b9286a0",FALSE,FALSE,17,110,280,0,FALSE,FALSE,FALSE,TRUE,0,111,1
sgrif,"Digging deeper, do any queues use something other than JSON besides Delayed Job and Sucker Punch?",FALSE,FALSE,16,111,281,0,FALSE,TRUE,FALSE,TRUE,0,112,1
sgrif,"Seems like providing an object that isn't an instance of Class isn't too far fetched. Maybe change this to else?",FALSE,FALSE,20,112,282,0,FALSE,TRUE,FALSE,TRUE,0,113,1
seuros,"You are right. Maybe we should inherit all adapters from AbstractAdapter  .",FALSE,FALSE,13,113,284,1,FALSE,TRUE,TRUE,TRUE,0,114,1
sgrif,"Would that mean providing a new adapter would also have to inherit from AbstractAdapter? Is there a problem with just letting any object through that I'm missing?",FALSE,FALSE,27,114,286,1,FALSE,TRUE,FALSE,TRUE,0,115,1
seuros,"The adapter should respond  enqueue and enqueue_at",FALSE,FALSE,8,115,287,0,FALSE,FALSE,TRUE,TRUE,0,116,1
DouweM,"Not a big fan of abstract classesâ€”duck typing and all that. I suggest simply explaining those methods and assuming adapter implementors are sane.",FALSE,TRUE,23,116,288,0,FALSE,TRUE,FALSE,TRUE,0,117,1
sgrif,"ðŸ‘? for duck typing.",FALSE,FALSE,4,117,289,0,FALSE,FALSE,FALSE,TRUE,0,118,1
sgrif,"Maybe we should provide an interface to ask about supported features, as well, to ease the burden on plugin maintainers?",FALSE,FALSE,20,118,291,1,FALSE,TRUE,TRUE,TRUE,0,119,1
DouweM,"Agreed. Would AJ calling respond_to?(:enqueue_at) on the adapter and raising if false be sufficient? That way adapters wouldn't need to include non-supported methods at all.",FALSE,TRUE,25,119,293,1,FALSE,TRUE,FALSE,TRUE,0,120,1
sgrif,"Or just we could just implement with sleep.",FALSE,FALSE,8,120,294,0,FALSE,FALSE,FALSE,TRUE,0,121,1
seuros,"That will drive users crazy.",FALSE,FALSE,5,121,295,0,FALSE,FALSE,FALSE,TRUE,0,122,1
DouweM,"And was discussed in the dedicated repo and ultimately decided against :)",FALSE,TRUE,12,122,296,0,FALSE,FALSE,FALSE,TRUE,0,123,1
carlosantoniodasilva,"I don't think hardcoding the url here is necessary, just the message about the backend should do (it could also be a bit more explicit)",FALSE,FALSE,25,123,298,1,FALSE,TRUE,TRUE,TRUE,0,124,1
phstc,"@seuros I was wondering if enqueue_at could just delegate to enqueue ignoring the timeout settings.",FALSE,FALSE,15,124,300,1,FALSE,TRUE,FALSE,TRUE,0,125,1
phstc,"My motivation is because in development, I would like to change only the adapter from shoryuken to inline, but because of NotImplementedError, I can't. I would need to create my own Inline or add ifs in the code.",FALSE,FALSE,38,124,301,2,FALSE,TRUE,FALSE,TRUE,0,125,2
phstc,"If delegating from enqueue_at to enqueue is too âœ¨ , we could also log a warning message saying it's ignoring the timeout settings.",FALSE,FALSE,23,124,303,4,FALSE,TRUE,FALSE,TRUE,0,125,3
sgrif,"Should we allow use without resque-scheduler for users who aren't using enqueue_at?",FALSE,FALSE,12,125,306,1,FALSE,TRUE,FALSE,TRUE,0,126,1
dhh,"I'd be OK with a version that basically raised like it does in the not-implemented cases.",FALSE,TRUE,16,126,308,1,TRUE,TRUE,FALSE,TRUE,0,127,1
carlosantoniodasilva,"wrong indent",FALSE,FALSE,2,128,310,0,FALSE,FALSE,FALSE,TRUE,0,129,1
carlosantoniodasilva,"Can we rely on public_send instead?",FALSE,FALSE,6,129,312,1,FALSE,TRUE,FALSE,TRUE,0,130,1
carlosantoniodasilva,"It might be good to require the delegate.",FALSE,FALSE,8,131,314,0,FALSE,FALSE,FALSE,TRUE,0,132,1
carlosantoniodasilva,"public_send? (or can't you just call new?)",FALSE,FALSE,7,132,315,0,FALSE,FALSE,FALSE,TRUE,0,133,1
seuros,"private_class_method :new #:nodoc:",FALSE,TRUE,3,133,316,0,FALSE,FALSE,FALSE,TRUE,0,134,1
carlosantoniodasilva,"Well,  it's probably private for a good reason then, and we shouldn't mess up with it :)",FALSE,FALSE,18,134,317,0,FALSE,FALSE,TRUE,TRUE,0,135,1
cristianbica,"That method is private for 10 years (it's from the first public commit :) ). The method is private because AM creates an instance internally in method_missing. Now the AM instance is created from the MessageDelivery class.",FALSE,TRUE,37,135,319,1,FALSE,TRUE,FALSE,TRUE,0,136,1
sgrif,"Why not just make it public?",FALSE,FALSE,6,136,320,0,FALSE,FALSE,FALSE,TRUE,0,137,1
seuros,"We could!ping @dhh",FALSE,TRUE,3,137,321,0,FALSE,FALSE,FALSE,TRUE,0,138,1
dhh,"I think the reason we don't to expose new is that all other calls go through the singleton. You're supposed to call NotificationMailer.my_action(arg).deliver -- not NotificationMailer.new.my_action(arg).deliver. So I don't think we should mess with that pattern for now.",FALSE,TRUE,38,138,323,1,TRUE,TRUE,TRUE,TRUE,0,139,1
sgrif,"Isn't it reasonable that if we have this need for our new additions, other plugin makers may need the same thing?",FALSE,FALSE,21,139,324,0,FALSE,FALSE,FALSE,TRUE,0,140,1
dhh,"Iâ€™ve never heard of that need in the 10 years so far. So Iâ€™d like to see a real case before going public with it.",FALSE,TRUE,25,140,325,0,TRUE,TRUE,FALSE,TRUE,0,141,1
dhh,"On Aug 16, 2014, at 10:23 AM, Sean Griffin notifications@github.com wrote:",FALSE,TRUE,11,140,326,1,TRUE,TRUE,FALSE,TRUE,0,141,2
dhh,"In actionmailer/lib/action_mailer/message_delivery.rb:",FALSE,TRUE,2,140,327,2,TRUE,TRUE,FALSE,TRUE,0,141,3
dhh,"@@ -0,0 +1,47 @@+module ActionMailer",FALSE,TRUE,5,140,328,3,TRUE,TRUE,FALSE,TRUE,0,141,4
dhh,"class MessageDelivery < Delegator",FALSE,TRUE,4,140,329,4,TRUE,TRUE,FALSE,TRUE,0,141,5
dhh,"def initialize(mailer, mail_method, *args)",FALSE,TRUE,4,140,330,5,TRUE,FALSE,FALSE,TRUE,0,141,6
dhh,"def getobj",FALSE,TRUE,2,140,332,7,TRUE,FALSE,FALSE,TRUE,0,141,7
dhh,"Isn't it reasonable that if we have this need for our new additions, other plugin makers may need the same thing?",FALSE,TRUE,21,140,333,8,TRUE,TRUE,FALSE,TRUE,0,141,8
dhh,"â€”Reply to this email directly or view it on GitHub.",FALSE,TRUE,10,140,334,9,TRUE,TRUE,FALSE,TRUE,0,141,9
sgrif,"This case doesn't count?",FALSE,FALSE,4,141,335,0,FALSE,FALSE,FALSE,TRUE,0,142,1
dhh,"It counts for 1. I usually like to see at least 2, preferably more.",FALSE,TRUE,14,142,336,0,TRUE,TRUE,FALSE,TRUE,0,143,1
sgrif,"Where is the serialize method coming from?",FALSE,FALSE,7,143,337,0,FALSE,FALSE,FALSE,TRUE,0,144,1
DouweM,"Check line 8.",FALSE,TRUE,3,144,338,0,FALSE,FALSE,FALSE,TRUE,0,145,1
sgrif,"...I appear to be blind.",FALSE,FALSE,5,145,339,0,FALSE,FALSE,FALSE,TRUE,0,146,1
carlosantoniodasilva,"Options are always passed, there's no need to make this arg optional.",FALSE,FALSE,12,147,341,0,FALSE,FALSE,FALSE,TRUE,0,148,1
carlosantoniodasilva,"Could just point to the list of adapters below, which could include the related symbols, so that we have a single update place.",FALSE,FALSE,23,148,342,0,FALSE,FALSE,FALSE,TRUE,0,149,1
sgrif,"Unannounced feature of 4.2, we found Waldo!",FALSE,FALSE,7,149,343,0,FALSE,TRUE,FALSE,TRUE,0,150,1
seuros,"@dhh  ?",FALSE,TRUE,3,151,345,0,FALSE,FALSE,FALSE,TRUE,0,152,1
dhh,"Maybe that was used in an earlier test. If nothing fails when you remove, feel free to cut.",FALSE,TRUE,18,152,346,0,TRUE,TRUE,FALSE,TRUE,0,153,1
dhh,"Actually, this is used. It's just a stub. We don't need to have this actually backed by anything to test what we need to test. So this is as it should be.",FALSE,TRUE,32,153,347,0,TRUE,TRUE,TRUE,TRUE,0,154,1
carlosantoniodasilva,"Is this supported, or required?",FALSE,FALSE,5,154,348,0,FALSE,FALSE,FALSE,TRUE,0,155,1
DouweM,"We want to promote this way of passing models along with a job as much as possible, so I'd say required to have it not take the extra step of adding a requirement to the Gemfile.",FALSE,TRUE,36,155,349,0,FALSE,TRUE,FALSE,TRUE,0,156,1
dhh,"Required. Definitely. Big part of the appeal of ActiveJob in general.",FALSE,TRUE,11,156,350,0,TRUE,TRUE,FALSE,TRUE,0,157,1
sgrif,"I might have missed it, but does this set the queueing backend to :inline by default in the test environment? Have we considered what testing will look like for apps that use enqueue_at?",FALSE,FALSE,33,157,352,1,FALSE,TRUE,FALSE,TRUE,0,158,1
carlosantoniodasilva,"These are not actually private, you must either move them inside a class << self for private to work, or use private_class_method :serialize_argument",FALSE,FALSE,23,158,354,1,FALSE,TRUE,FALSE,TRUE,0,159,1
carlosantoniodasilva,"Actually, why is this a class if we just make use of class methods? Could either be a module, or actually use a class by instantiating it to do the heavy lifting.",FALSE,FALSE,32,159,356,1,FALSE,TRUE,FALSE,TRUE,0,160,1
DouweM,"Agreed, it could/should be a module. I think previously it was used to instantiate models as well.",FALSE,TRUE,17,160,357,0,FALSE,TRUE,TRUE,TRUE,0,161,1
carlosantoniodasilva,"It might be good to document those too.",FALSE,FALSE,8,161,358,0,FALSE,FALSE,FALSE,TRUE,0,162,1
carlosantoniodasilva,"This attribute seems a bit misleading to me, enqueued_at gives me the understanding of the time it's being enqueued, eg Time.current or created_at, different from enqueue_at. Does that make sense?",FALSE,FALSE,30,163,361,1,FALSE,TRUE,FALSE,TRUE,0,164,1
DouweM,"Agreed. How about enqueued_for? Reads like  enqueued for tomorrow 3am  rather than  enqueued at noon today  which sounds like the time it was enqueued.",FALSE,TRUE,24,164,363,1,FALSE,TRUE,FALSE,TRUE,0,165,1
seuros,"What about aliasing both enqueued_for and enqueued_at",FALSE,TRUE,7,165,365,1,FALSE,TRUE,FALSE,TRUE,0,166,1
cristianbica,"Enqueue for later is supported by 3 adapters:",FALSE,TRUE,8,166,366,0,FALSE,FALSE,FALSE,TRUE,0,167,1
cristianbica,"delayed_job: Something.delay(run_at: 10.hours.from_now).a_method",FALSE,TRUE,3,166,367,1,FALSE,TRUE,FALSE,TRUE,0,167,2
cristianbica,"resque: Resque.enqueue_at_with_queue job.queue_name, timestamp...",FALSE,TRUE,4,166,368,2,FALSE,TRUE,FALSE,TRUE,0,167,3
cristianbica,"sidekiq: Sidekiq::Client.push at: timestamp, class:....",FALSE,TRUE,5,166,369,3,FALSE,TRUE,FALSE,TRUE,0,167,4
cristianbica,"Pretty obvious where the _at came from :)",FALSE,TRUE,8,166,370,4,FALSE,TRUE,FALSE,TRUE,0,167,5
DouweM,"Sure, but for a timestamp attribute it's confusing vs created_at etc. I think aliasing is a good compromise.",FALSE,TRUE,18,167,371,0,FALSE,TRUE,FALSE,TRUE,0,168,1
carlosantoniodasilva,"Why not just rename it to the actual argument: enqueue_at",FALSE,FALSE,10,168,372,0,FALSE,FALSE,FALSE,TRUE,0,169,1
dhh,"I think enqueue_at makes perfect sense. There's no guarantee that the queue will run the job precisely at that second. It'll simply enqueue it for processing then, which depending on how busy it is, may well mean processing some time later. So ðŸ‘Ž on rename or alias.",FALSE,TRUE,47,169,374,1,TRUE,TRUE,FALSE,TRUE,0,170,1
carlosantoniodasilva,"I believe this yields a ruby warning, so might be good to wrap with ()",FALSE,FALSE,15,170,375,0,FALSE,FALSE,FALSE,TRUE,0,171,1
carlosantoniodasilva,"I guess you don't need this require, but you do need the one for secure random",FALSE,FALSE,16,171,376,0,FALSE,FALSE,FALSE,TRUE,0,172,1
carlosantoniodasilva,"There's no need for AS::Concern to just add a writer, you can do it on the module itself:",FALSE,FALSE,18,172,378,1,FALSE,TRUE,FALSE,TRUE,0,173,1
carlosantoniodasilva,"Why two?",FALSE,FALSE,2,173,379,0,FALSE,FALSE,FALSE,TRUE,0,174,1
DouweM,"We want to log before and after performing, check lines 60 and 64. Looks to me like this is the only way.",FALSE,TRUE,22,174,380,0,FALSE,TRUE,FALSE,TRUE,0,175,1
carlosantoniodasilva,"As far as I'm aware of, log subscriber already has code to deal with this and you can use the duration to do the logging. I'd rather not have two of these per job being performed.",FALSE,FALSE,36,175,382,1,FALSE,TRUE,FALSE,TRUE,0,176,1
carlosantoniodasilva,"@tenderlove might be able to tell us more about it.",FALSE,FALSE,10,175,383,2,FALSE,FALSE,FALSE,TRUE,0,176,2
DouweM,"As far as I can see from the source, LogSubscriber does not call any method on itself when instrumentation starts, just when it finishes: source (start and finish are called by Notifications before and after the block is yielded). We want a separate log message when the job starts, which at this point requires a separate instrumentation.",FALSE,TRUE,57,176,385,1,FALSE,TRUE,FALSE,TRUE,0,177,1
DouweM,"I wouldn't mind changing LogSubscriber.start to call #{name}_start if that method exists, but that's not backward compatible if people are already using their own _start event.",FALSE,TRUE,26,176,387,3,FALSE,TRUE,FALSE,TRUE,0,177,2
DouweM,"/cc @tenderlove",FALSE,TRUE,2,176,388,4,FALSE,FALSE,FALSE,TRUE,0,177,3
carlosantoniodasilva,"You could call this method with a to_s argument to avoid more strings here.",FALSE,FALSE,14,177,390,1,FALSE,TRUE,FALSE,TRUE,0,178,1
carlosantoniodasilva,"This seems a little awkward, having to metaprogram like that to set the queue name. Doesn't it provide an interface for doing so?",FALSE,FALSE,23,178,392,1,FALSE,TRUE,FALSE,TRUE,0,179,1
cristianbica,"Yep. When I did some integration testing I noticed that for Qu all the jobs were pushed to the default queue. When Qu pushes the job on the queue it calls (klass.instance_variable_get(:@queue) || 'default').to_s to determine the queue.",FALSE,TRUE,38,179,393,0,FALSE,TRUE,FALSE,TRUE,0,180,1
carlosantoniodasilva,"It seems these requires could be âœ‚ï¸?",FALSE,FALSE,7,180,394,0,FALSE,FALSE,FALSE,TRUE,0,181,1
carlosantoniodasilva,"There is no need for this to be an instance variable.",FALSE,FALSE,11,181,395,0,FALSE,FALSE,FALSE,TRUE,0,182,1
carlosantoniodasilva,"Just pass all of them into the same accessor call.",FALSE,FALSE,10,182,396,0,FALSE,FALSE,FALSE,TRUE,0,183,1
carlosantoniodasilva,"Hm now I noticed it was a copy from DJ ðŸ˜¢",FALSE,FALSE,11,183,397,0,FALSE,TRUE,FALSE,TRUE,0,184,1
carlosantoniodasilva,"You can use markdown to create a more readable table.",FALSE,FALSE,10,184,398,0,FALSE,FALSE,FALSE,TRUE,0,185,1
tenderlove,"Is this actually necessary?  You can get the currently loaded version of a gem from RubyGems:",FALSE,TRUE,17,185,400,1,FALSE,TRUE,FALSE,TRUE,0,186,1
tenderlove,"Also, what does anyone use this for?",FALSE,TRUE,7,185,401,2,FALSE,TRUE,FALSE,TRUE,0,186,2
chancancode,"This was added in #14101. IIRC the motivation was to make comparison easy for gem/plugin authors (if ActiveRecord.gem_version > ...)",FALSE,FALSE,20,186,403,1,FALSE,TRUE,FALSE,TRUE,0,187,1
tenderlove,"@chancancode ya, but that was before we knew that you could get the info from RubyGems.  I think we should encourage people to query RG for the loaded gem info and rm this code.",FALSE,TRUE,35,187,404,0,FALSE,TRUE,TRUE,TRUE,0,188,1
chancancode,"Global Identification?",FALSE,TRUE,2,188,405,0,FALSE,TRUE,FALSE,TRUE,0,189,1
tenderlove,"Where does the test harness set up redis queues and pg tables for testing the different queues?  I can't seem to find it.",FALSE,TRUE,24,192,409,1,FALSE,TRUE,FALSE,TRUE,0,193,1
cristianbica,"@tenderlove  We have integration tests rails/activejob#102 but:I wanted to drop them seuros/actionmailer-deliver_later#6 (comment)@ddh said no  :) seuros/actionmailer-deliver_later#6 (comment)@rafaelfranca said to make separate PR with them https://github.com/seuros/rails/issues/1#issuecomment-51945362So I'll make the PR once we get this PR merged",FALSE,TRUE,38,193,410,0,FALSE,TRUE,FALSE,TRUE,0,194,1
DouweM,"Not related to the PR itself, but I was wondering: what makes some part of Rails  active_  or  action_ ?  Active record  was an existing term of course, but what makes ActionMailer and ActiveJob, action and active, relatively?",FALSE,TRUE,37,194,412,1,FALSE,TRUE,FALSE,TRUE,0,195,1
dhh,"I've used Action for anything that is frontend aimed (controller/views), Active for backend (models etc).",FALSE,TRUE,15,195,414,1,TRUE,TRUE,FALSE,TRUE,0,196,1
dhh,"On Aug 16, 2014, at 12:20, Douwe Maan notifications@github.com wrote:",FALSE,TRUE,10,195,415,2,TRUE,TRUE,FALSE,TRUE,0,196,2
dhh,"Not related to the PR itself, but I was wondering: what makes some part of Rails  active_  or  action_ ?  Active record  was an existing term of course, but what makes ActionMailer and ActiveJob, action and active, relatively?",FALSE,TRUE,37,195,417,4,TRUE,TRUE,FALSE,TRUE,0,196,3
dhh,"â€”Reply to this email directly or view it on GitHub.",FALSE,TRUE,10,195,418,5,TRUE,TRUE,FALSE,TRUE,0,196,4
DouweM,"All right, curiosity satisfied :)",FALSE,TRUE,5,196,419,0,FALSE,FALSE,FALSE,TRUE,0,197,1
cristianbica,"@tenderlove here are the integration tests#16541",FALSE,TRUE,6,198,421,0,FALSE,FALSE,FALSE,TRUE,0,199,1
cristianbica,"Cristian Bica",FALSE,TRUE,2,198,422,1,FALSE,TRUE,FALSE,TRUE,0,199,2
cristianbica,"On Fri, Aug 15, 2014 at 5:07 AM, Aaron Patterson notifications@github.comwrote:",FALSE,TRUE,11,198,423,2,FALSE,TRUE,FALSE,TRUE,0,199,3
cristianbica,"Where does the test harness set up redis queues and pg tables for testingthe different queues? I can't seem to find it.",FALSE,TRUE,22,198,425,4,FALSE,TRUE,FALSE,TRUE,0,199,4
cristianbica,"â€”Reply to this email directly or view it on GitHub#16485 (comment).",FALSE,TRUE,11,198,426,5,FALSE,TRUE,FALSE,TRUE,0,199,5
jGRUBBS,"@mperham I am looking at the pull request here rails/activejob#35I still don't see any rationale behind removing the later method in the sucker_punch_adapter unless you have any reason as to why it was removed, could it be added back?",FALSE,FALSE,39,200,429,1,FALSE,TRUE,FALSE,TRUE,0,201,1
cristianbica,"@jGRUBBS it was proposed again in rails/rails #16643 but because Sucker Punch does not have a persistent store we decided not to accept it.",FALSE,TRUE,24,201,431,1,FALSE,TRUE,FALSE,TRUE,0,202,1
jGRUBBS,"@cristianbica thanks for the explanation, now I see.",FALSE,TRUE,8,202,432,0,FALSE,TRUE,FALSE,TRUE,0,203,1
